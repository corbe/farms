var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.478,1,2.353]],["body/modules/AppModule.html",[0,1.522,1,4.256,2,1.151,3,1.746,4,2.008,5,2.008,6,3.371,7,0.024,8,3.371,9,3.371,10,3.371,11,2.031,12,1.339,13,1.339,14,0.17,15,0.17,16,0.15,17,2.365,18,2.209,19,0.533,20,0.777,21,1.456,22,1.003,23,2.365,24,2.365,25,2.365,26,2.365,27,2.365,28,1.772,29,1.772,30,2.365,31,2.008,32,1.339,33,1.772,34,2.031,35,2.365,36,1.879,37,4.84,38,1.516,39,2.422,40,1.879,41,1.339,42,1.879,43,1.596,44,1.746,45,1.456,46,1.628,47,2.008,48,1.108,49,1.339,50,1.746,51,2.008,52,2.365,53,2.365,54,2.422,55,2.365,56,0.425,57,2.689,58,3.588,59,3.588,60,3.588,61,3.588,62,3.588,63,3.588,64,3.588,65,3.588,66,3.588,67,3.588,68,2.365,69,1.239,70,2.365,71,1.239,72,2.365,73,1.003,74,1.456,75,0.17,76,0.114,77,0.012,78,0.012]],["title/entities/Area.html",[32,1.076,79,1.582]],["body/entities/Area.html",[7,0.023,14,0.293,15,0.293,16,0.259,19,0.329,32,1.626,56,0.623,69,2.757,71,2.134,75,0.293,76,0.197,77,0.018,78,0.018,79,2.388,80,3.459,81,0.442,82,1.437,83,1.801,84,1.19,85,1.495,86,1.437,87,1.528,88,3.553,89,0.79,90,4.075,91,1.626,92,4.075,93,4.075,94,2.98,95,2.75,96,1.339,97,4.075]],["title/entities/AreaValue.html",[46,1.582,79,1.582]],["body/entities/AreaValue.html",[7,0.024,14,0.23,15,0.23,16,0.203,19,0.416,32,2.066,33,2.39,46,2.025,48,2.026,56,0.66,71,1.67,75,0.23,76,0.154,77,0.015,78,0.015,79,2.025,81,0.346,82,1.218,83,1.59,84,1.261,86,1.522,87,1.619,88,3.012,89,0.837,94,2.915,95,2.152,96,1.048,98,2.707,99,3.475,100,4.464,101,3.189,102,4.464,103,3.789,104,3.344,105,3.189,106,3.189,107,3.189,108,3.189,109,5.149]],["title/controllers/AreasController.html",[110,1.582,111,2.353]],["body/controllers/AreasController.html",[7,0.024,14,0.186,15,0.186,16,0.164,19,0.408,20,0.848,56,0.598,73,1.094,75,0.186,76,0.125,77,0.013,78,0.013,81,0.28,83,1.748,84,1.143,85,1.296,87,1.568,89,0.811,91,1.899,110,1.171,111,2.585,112,2.19,113,1.521,114,1.624,115,2.46,116,2.168,117,2.168,118,2.168,119,2.19,120,3.203,121,3.423,122,2.58,123,2.008,124,2.012,125,2.58,126,1.46,127,2.87,128,2.58,129,1.46,130,2.87,131,2.58,132,1.46,133,3.704,134,2.87,135,2.58,136,2.87,137,1.933,138,1.933,139,1.933,140,2.586,141,2.19,142,1.256,143,2.87,144,1.46,145,1.741,146,1.588,147,1.741,148,1.741,149,1.741,150,1.933,151,2.145,152,2.58,153,2.58,154,1.933,155,2.58,156,1.933,157,2.58,158,1.933,159,2.58]],["title/modules/AreasModule.html",[0,1.478,6,2.146]],["body/modules/AreasModule.html",[0,2.172,2,1.901,3,2.492,6,3.977,7,0.024,11,2.899,12,2.211,13,2.211,14,0.281,15,0.281,16,0.248,18,2.404,19,0.508,20,1.284,21,2.404,22,1.657,32,1.206,73,2.172,74,3.152,75,0.281,76,0.189,77,0.017,78,0.017,111,3.856,140,3.657,141,3.316,160,3.316,161,3.316,162,3.907,163,3.907,164,3.316,165,3.907]],["title/injectables/AreasService.html",[140,1.973,166,1.582]],["body/injectables/AreasService.html",[7,0.024,14,0.189,15,0.189,16,0.166,19,0.459,20,0.861,22,1.111,32,0.809,56,0.643,75,0.189,76,0.127,77,0.013,78,0.013,81,0.284,83,1.573,84,1.229,85,1.394,86,1.685,89,0.854,96,0.861,113,1.539,114,1.643,115,2.479,116,2.193,117,2.193,118,2.193,119,3.289,120,3.077,123,2.159,124,2.025,126,2.193,129,2.193,132,2.193,133,3.72,140,2.193,142,1.275,143,2.903,144,1.483,151,2.159,164,2.224,166,1.758,167,1.612,168,2.224,169,2.615,170,2.62,171,3.135,172,2.62,173,3.874,174,2.62,175,2.62,176,2.62,177,2.62,178,2.62,179,1.768,180,2.62,181,1.768,182,2.62,183,2.62,184,2.62,185,2.62,186,2.62]],["title/classes/CreateAreaDto.html",[76,0.169,120,1.973]],["body/classes/CreateAreaDto.html",[7,0.024,14,0.283,15,0.283,16,0.249,19,0.415,28,2.941,29,2.941,32,1.212,56,0.608,75,0.283,76,0.249,77,0.017,78,0.017,81,0.426,82,1.402,83,1.768,84,1.161,85,1.558,86,1.402,87,1.139,89,0.771,91,1.586,94,2.221,120,2.908,187,1.006,188,4.861,189,2.941,190,3.925,191,3.925,192,3.331,193,3.925,194,3.925,195,3.849,196,2.221,197,2.055,198,3.925,199,3.331]],["title/classes/CreateDashboardDto.html",[76,0.169,200,2.353]],["body/classes/CreateDashboardDto.html",[7,0.022,14,0.369,15,0.369,16,0.326,75,0.369,76,0.248,77,0.021,78,0.021,187,1.316,200,4.097,201,4.356,202,3.463]],["title/classes/CreateFarmDto.html",[76,0.169,203,1.825]],["body/classes/CreateFarmDto.html",[7,0.024,14,0.209,15,0.209,16,0.184,19,0.394,46,2.216,56,0.736,75,0.209,76,0.202,77,0.014,78,0.014,81,0.314,82,1.137,83,1.508,84,1.332,85,1.252,86,1.696,87,1.643,89,0.933,91,1.82,146,3.005,187,0.743,195,4.815,196,1.639,197,1.517,203,2.183,204,5.374,205,2.17,206,4.145,207,3.659,208,3.005,209,2.764,210,3.659,211,2.896,212,2.896,213,2.896,214,2.896,215,2.896,216,2.896,217,2.896,218,2.896,219,2.896,220,2.896,221,1.517,222,2.458,223,2.458]],["title/classes/CreateProducerDto.html",[76,0.169,224,1.825]],["body/classes/CreateProducerDto.html",[7,0.024,14,0.219,15,0.219,16,0.193,19,0.497,38,1.755,48,1.549,56,0.682,75,0.219,76,0.243,77,0.015,78,0.015,81,0.33,82,1.178,83,1.549,84,1.235,85,1.287,86,1.178,87,1.457,89,0.866,91,1.686,99,2.052,187,0.78,195,4.092,196,1.721,197,1.593,221,1.593,222,2.581,223,3.664,224,2.26,225,5.085,226,2.279,227,3.386,228,4.043,229,3.041,230,3.041,231,3.041,232,3.041,233,3.041,234,3.041,235,5.018,236,2.581,237,2.581,238,2.279,239,2.279,240,2.279,241,3.041,242,2.052,243,3.041,244,3.041,245,3.041]],["title/classes/Dashboard.html",[34,1.973,76,0.169]],["body/classes/Dashboard.html",[7,0.024,14,0.318,15,0.318,16,0.28,19,0.447,34,3.135,44,2.945,45,2.716,56,0.522,75,0.318,76,0.214,77,0.019,78,0.019,81,0.479,82,1.511,87,1.281,89,0.662,94,3.426,96,1.45,187,1.132,246,3.746,247,5.138,248,4.413,249,4.413]],["title/controllers/DashboardController.html",[110,1.582,250,2.353]],["body/controllers/DashboardController.html",[7,0.024,14,0.305,15,0.305,16,0.269,19,0.436,20,1.392,34,2.398,73,1.797,75,0.305,76,0.205,77,0.018,78,0.018,81,0.46,87,1.23,89,0.636,110,1.922,113,2.144,115,3.043,124,1.578,145,2.86,147,2.86,148,2.86,149,2.86,151,1.683,250,3.643,251,3.597,252,4.237,253,3.362,254,3.597,255,4.237]],["title/modules/DashboardModule.html",[0,1.478,8,2.146]],["body/modules/DashboardModule.html",[0,1.965,2,1.638,3,2.255,7,0.024,8,3.808,11,2.623,12,1.905,13,1.905,14,0.242,15,0.242,16,0.214,18,2.072,19,0.529,20,1.106,21,2.072,22,1.427,32,1.039,34,2.623,36,2.426,38,1.853,39,3.127,40,2.426,41,1.905,42,2.426,43,2.272,44,2.255,45,2.072,73,1.965,74,2.852,75,0.242,76,0.163,77,0.016,78,0.016,250,3.576,253,3.502,254,2.857,256,2.857,257,2.857,258,3.366,259,3.366,260,3.366,261,4.277,262,3.366]],["title/injectables/DashboardService.html",[166,1.582,253,1.973]],["body/injectables/DashboardService.html",[7,0.024,14,0.204,15,0.204,16,0.18,19,0.499,20,0.933,22,1.204,32,0.876,36,2.771,38,1.688,39,2.772,40,2.771,41,1.607,42,2.771,43,1.915,44,2.349,45,1.747,56,0.336,75,0.204,76,0.137,77,0.014,78,0.014,81,0.308,84,0.642,85,0.728,89,0.616,96,0.933,113,1.631,115,2.575,123,1.127,124,1.057,151,1.127,166,1.864,167,1.747,169,2.772,171,4.068,179,1.915,181,3.571,253,2.325,261,3.965,263,2.409,264,2.528,265,2.838,266,2.838,267,2.838,268,2.127,269,2.772,270,2.838,271,2.409,272,2.838,273,2.838,274,2.838,275,2.838,276,1.915,277,4.108,278,1.915,279,2.838,280,3.571,281,2.838,282,2.838,283,2.838,284,2.838,285,2.838,286,2.838,287,2.838]],["title/classes/DashboardTotalFarms.html",[44,1.696,76,0.169]],["body/classes/DashboardTotalFarms.html",[7,0.024,14,0.274,15,0.274,16,0.242,19,0.406,44,2.448,48,1.554,49,2.152,56,0.595,75,0.274,76,0.184,77,0.017,78,0.017,81,0.412,82,1.373,86,1.637,87,1.46,89,0.755,96,1.249,187,0.975,209,3.396,247,5.093,288,3.47,289,3.227,290,4.212,291,3.802,292,3.802,293,3.395,294,3.693,295,2.566,296,2.566,297,3.802,298,3.227,299,2.566]],["title/classes/DashboardTotalFarmsAreaType.html",[36,1.825,76,0.169]],["body/classes/DashboardTotalFarmsAreaType.html",[7,0.023,14,0.267,15,0.267,16,0.235,19,0.399,32,1.718,36,2.589,38,1.946,48,1.526,49,2.096,56,0.585,75,0.267,76,0.179,77,0.017,78,0.017,81,0.402,82,1.349,86,1.62,87,1.435,89,0.742,96,1.217,187,0.95,208,3.654,210,4.449,288,3.425,290,4.175,293,3.336,294,3.654,295,2.499,296,2.499,299,2.499,300,2.774,301,3.703,302,3.703,303,3.703,304,3.703]],["title/classes/DashboardTotalFarmsPlantingType.html",[40,1.825,76,0.169]],["body/classes/DashboardTotalFarmsPlantingType.html",[7,0.024,14,0.228,15,0.228,16,0.201,19,0.449,32,1.808,33,2.372,38,1.944,40,2.325,41,3.147,46,1.436,47,2.687,48,1.371,49,1.792,56,0.607,75,0.228,76,0.153,77,0.015,78,0.015,81,0.343,82,1.212,86,1.517,87,1.489,89,0.77,91,1.371,96,1.04,187,0.812,209,3.147,288,3.422,290,4.206,293,2.997,294,3.422,295,2.136,296,2.136,299,2.136,300,2.372,305,4.719,306,3.166,307,3.166,308,3.166,309,3.166,310,3.166,311,3.166,312,3.166,313,3.166,314,3.166,315,3.166,316,3.166,317,3.166,318,3.166]],["title/classes/DashboardTotalFarmsState.html",[42,1.825,76,0.169]],["body/classes/DashboardTotalFarmsState.html",[7,0.023,14,0.25,15,0.25,16,0.221,19,0.382,38,2.275,42,2.48,48,1.463,49,1.967,56,0.638,75,0.25,76,0.168,77,0.016,78,0.016,81,0.377,82,1.293,86,1.579,87,1.564,89,0.809,91,1.463,96,1.142,187,0.891,207,4.335,209,3.275,288,3.561,290,4.315,293,3.197,294,3.561,295,2.346,296,2.346,298,2.95,299,2.346,319,2.95,320,3.476,321,3.476,322,3.476,323,3.476,324,3.476,325,3.476]],["title/entities/Farm.html",[48,1.076,79,1.582]],["body/entities/Farm.html",[7,0.024,14,0.174,15,0.174,16,0.153,19,0.354,32,1.125,46,2.381,48,1.125,50,2.554,51,2.047,56,0.714,69,1.907,71,1.263,75,0.174,76,0.117,77,0.012,78,0.012,79,1.652,81,0.262,82,0.994,83,1.355,84,1.333,85,1.125,86,1.61,87,1.752,88,2.458,89,0.906,91,1.704,94,3.243,95,1.628,96,0.792,103,3.092,104,3.663,146,2.701,206,3.725,207,3.288,208,2.701,209,2.484,210,3.288,326,2.047,327,4.684,328,3.932,329,2.412,330,3.642,331,2.412,332,2.412,333,2.412,334,2.412,335,2.047,336,3.642,337,2.412,338,2.412,339,4.388,340,2.961,341,2.412,342,2.412,343,2.412,344,3.092,345,3.642,346,2.412,347,4.388]],["title/controllers/FarmsController.html",[110,1.582,348,2.353]],["body/controllers/FarmsController.html",[7,0.024,14,0.186,15,0.186,16,0.164,19,0.408,20,0.848,38,0.902,56,0.598,73,1.094,75,0.186,76,0.125,77,0.013,78,0.013,81,0.28,83,1.748,84,1.143,85,1.296,87,1.568,89,0.811,91,1.899,110,1.171,113,1.521,114,1.624,115,2.46,116,2.168,117,2.168,118,2.168,121,3.423,123,2.008,124,2.012,126,1.46,127,2.87,129,1.46,130,2.87,132,1.46,134,2.87,136,2.87,137,1.933,138,1.933,139,1.933,142,1.256,144,1.46,145,1.741,147,1.741,148,1.741,149,1.741,150,1.933,151,2.145,154,1.933,156,1.933,158,1.933,203,2.963,348,2.585,349,2.19,350,2.19,351,2.58,352,2.58,353,2.58,354,2.58,355,3.704,356,2.58,357,2.586,358,2.19,359,2.585,360,2.58,361,2.58,362,2.58,363,2.58,364,2.58]],["title/modules/FarmsModule.html",[0,1.478,9,2.146]],["body/modules/FarmsModule.html",[0,2.133,2,1.85,3,2.448,7,0.024,9,3.947,11,2.848,12,2.152,13,2.152,14,0.274,15,0.274,16,0.242,18,2.34,19,0.517,20,1.249,21,2.34,22,1.612,46,2.282,48,1.174,73,2.133,74,3.096,75,0.274,76,0.184,77,0.017,78,0.017,348,3.805,357,3.63,358,3.227,365,3.227,366,3.227,367,3.802,368,3.802,369,3.227,370,3.227,371,3.802]],["title/injectables/FarmsService.html",[166,1.582,357,1.973]],["body/injectables/FarmsService.html",[7,0.024,14,0.163,15,0.163,16,0.143,19,0.452,20,0.742,22,0.958,46,1.025,48,1.301,56,0.603,75,0.163,76,0.109,77,0.012,78,0.012,81,0.245,83,1.661,84,1.152,85,1.307,86,1.617,89,0.807,96,0.742,113,1.376,114,1.469,115,2.3,116,1.961,117,1.961,118,1.961,123,2.024,124,1.899,126,1.961,129,1.961,132,1.961,142,1.099,144,1.278,146,1.39,151,2.136,166,1.572,167,1.39,169,2.338,171,3.447,179,1.524,181,2.338,203,2.669,264,2.207,268,1.692,278,1.524,280,2.338,328,1.692,340,1.524,350,2.941,355,3.447,357,1.961,359,2.338,369,1.917,370,1.917,372,1.917,373,2.258,374,4.214,375,2.258,376,3.464,377,2.258,378,2.258,379,2.258,380,2.258,381,2.258,382,3.577,383,2.258,384,2.258,385,2.258,386,2.258,387,2.941,388,2.258,389,2.258,390,2.258,391,3.577,392,1.917,393,2.941,394,2.258,395,2.258,396,1.692,397,2.258]],["title/entities/Producer.html",[50,1.696,79,1.582]],["body/entities/Producer.html",[7,0.024,14,0.213,15,0.213,16,0.188,19,0.399,38,1.727,48,1.887,49,1.674,50,2.059,56,0.702,69,1.548,71,1.548,75,0.213,76,0.143,77,0.014,78,0.014,79,1.919,81,0.321,82,1.154,83,1.525,84,1.219,85,1.267,86,1.154,87,1.656,88,2.855,89,0.856,91,1.665,94,3.36,95,1.995,96,0.971,104,3.17,192,2.51,227,3.334,228,4.218,238,2.215,239,2.215,327,4.193,335,2.51,344,3.591,398,2.51,399,2.957,400,4.231,401,2.957,402,2.957,403,2.957,404,2.957,405,2.957,406,5.392,407,3.591,408,2.957,409,4.231,410,2.51]],["title/controllers/ProducersController.html",[110,1.582,411,2.353]],["body/controllers/ProducersController.html",[7,0.024,14,0.186,15,0.186,16,0.164,19,0.408,20,0.848,56,0.598,73,1.094,75,0.186,76,0.125,77,0.013,78,0.013,81,0.28,83,1.748,84,1.143,85,1.296,87,1.568,89,0.811,91,1.899,110,1.171,113,1.521,114,1.624,115,2.46,116,2.168,117,2.168,118,2.168,121,3.423,123,2.008,124,2.012,126,1.46,127,2.87,129,1.46,130,2.87,132,1.46,134,2.87,136,2.87,137,1.933,138,1.933,139,1.933,142,1.256,144,1.46,145,1.741,147,1.741,148,1.741,149,1.741,150,1.933,151,2.145,154,1.933,156,1.933,158,1.933,224,2.963,328,1.933,411,2.585,412,2.19,413,2.58,414,2.58,415,2.58,416,2.58,417,2.58,418,3.704,419,2.58,420,2.586,421,2.19,422,2.585,423,2.58,424,2.58,425,2.58,426,2.58,427,2.58]],["title/modules/ProducersModule.html",[0,1.478,10,2.146]],["body/modules/ProducersModule.html",[0,2.172,2,1.901,3,2.492,7,0.024,10,3.977,11,2.899,12,2.211,13,2.211,14,0.281,15,0.281,16,0.248,18,2.404,19,0.508,20,1.284,21,2.404,22,1.657,50,1.901,73,2.172,74,3.152,75,0.281,76,0.189,77,0.017,78,0.017,411,3.856,420,3.657,421,3.316,428,3.316,429,3.316,430,3.907,431,3.907,432,3.316,433,3.907]],["title/injectables/ProducersService.html",[166,1.582,420,1.973]],["body/injectables/ProducersService.html",[7,0.024,14,0.168,15,0.168,16,0.149,19,0.44,20,0.768,22,0.992,38,1.244,50,2.096,56,0.613,75,0.168,76,0.113,77,0.012,78,0.012,81,0.254,83,1.684,84,1.17,85,1.328,86,1.633,89,0.818,96,0.768,113,1.413,114,1.509,115,2.342,116,2.014,117,2.014,118,2.014,123,2.056,124,1.929,126,2.014,129,2.014,132,2.014,142,1.138,144,1.324,151,2.166,166,1.614,167,1.44,169,2.401,171,2.962,179,1.579,181,1.579,224,2.52,264,2.255,268,1.753,278,1.579,280,2.401,340,1.579,382,3.656,387,3.02,391,3.656,392,1.985,393,3.02,396,1.753,418,3.596,420,2.014,422,2.401,432,1.985,434,1.985,435,2.339,436,2.339,437,3.558,438,3.558,439,2.339,440,2.339,441,2.339,442,2.339,443,2.339,444,2.339,445,3.558,446,2.339,447,3.558,448,2.339,449,2.339,450,2.339]],["title/classes/ResponseDashboardDto.html",[76,0.169,269,2.353]],["body/classes/ResponseDashboardDto.html",[7,0.024,14,0.257,15,0.257,16,0.226,19,0.472,32,1.1,36,2.858,38,2.201,39,3.251,40,2.858,41,2.017,42,2.858,43,2.405,44,2.656,45,2.193,56,0.692,75,0.257,76,0.172,77,0.016,78,0.016,81,0.386,82,1.315,89,0.877,187,0.914,202,2.405,261,4.38,269,3.251,451,5.183,452,5.457,453,5.457,454,5.457,455,3.563,456,3.563,457,3.563,458,3.563]],["title/classes/UpdateAreaDto.html",[76,0.169,133,2.146]],["body/classes/UpdateAreaDto.html",[7,0.023,14,0.341,15,0.341,16,0.301,19,0.467,75,0.341,76,0.229,77,0.02,78,0.02,114,2.007,120,2.678,133,3.559,143,3.546,187,1.214,189,3.546,459,4.017,460,3.194,461,2.912,462,2.912,463,3.194,464,4.732]],["title/classes/UpdateDashboardDto.html",[76,0.169,465,2.612]],["body/classes/UpdateDashboardDto.html",[7,0.023,14,0.341,15,0.341,16,0.301,19,0.467,75,0.341,76,0.229,77,0.02,78,0.02,114,2.007,187,1.214,200,3.194,202,3.194,271,4.017,460,3.194,461,2.912,462,2.912,463,3.194,465,4.333,466,4.017,467,4.732]],["title/classes/UpdateFarmDto.html",[76,0.169,355,2.146]],["body/classes/UpdateFarmDto.html",[7,0.023,14,0.313,15,0.313,16,0.276,19,0.443,56,0.514,75,0.313,76,0.21,77,0.019,78,0.019,81,0.471,82,1.497,83,1.856,84,1.24,86,1.497,89,0.652,114,1.843,187,1.114,203,2.276,205,3.256,355,3.376,359,2.933,460,2.933,461,2.675,462,2.675,463,2.933,468,4.656,469,4.346,470,4.346]],["title/classes/UpdateProducerDto.html",[76,0.169,418,2.146]],["body/classes/UpdateProducerDto.html",[7,0.023,14,0.313,15,0.313,16,0.276,19,0.443,56,0.514,75,0.313,76,0.21,77,0.019,78,0.019,81,0.471,82,1.497,83,1.856,84,1.24,86,1.497,89,0.652,114,1.843,187,1.114,224,2.276,226,3.256,418,3.376,422,2.933,460,2.933,461,2.675,462,2.675,463,2.933,471,4.656,472,4.346,473,4.346]],["title/classes/areasValidator.html",[76,0.169,221,1.825]],["body/classes/areasValidator.html",[7,0.024,14,0.246,15,0.246,16,0.217,19,0.378,54,2.308,56,0.405,75,0.246,76,0.227,77,0.016,78,0.016,81,0.371,84,0.773,85,1.201,86,1.458,89,0.703,91,1.056,113,1.861,123,1.358,124,1.745,142,1.664,146,2.105,187,0.877,196,2.652,197,1.791,203,2.453,208,2.883,209,1.936,221,2.798,264,1.791,276,3.161,359,2.308,474,2.903,475,3.51,476,4.003,477,4.003,478,3.42,479,4.685,480,4.003,481,4.306,482,3.42,483,2.562,484,3.51,485,2.903,486,2.903,487,3.976,488,3.42,489,2.903,490,2.903,491,2.903,492,3.976,493,3.42]],["title/classes/areasValidator-1.html",[76,0.141,221,1.527,396,2.185]],["body/classes/areasValidator-1.html",[7,0.024,14,0.224,15,0.224,16,0.197,19,0.354,32,1.354,38,1.087,48,1.796,54,2.958,56,0.368,69,1.627,75,0.224,76,0.212,77,0.015,78,0.015,81,0.337,84,0.703,85,1.124,89,0.658,91,0.96,113,1.741,123,1.234,124,1.633,151,1.741,187,0.797,196,2.481,197,1.627,208,3.125,221,2.659,237,2.638,264,1.627,305,2.638,475,3.284,476,3.804,477,4.132,480,3.804,481,4.132,483,2.328,484,3.284,487,3.72,489,2.638,490,2.638,491,2.638,492,3.72,494,2.638,495,3.108,496,4.383,497,3.108,498,5.078,499,3.108,500,3.108,501,3.108,502,3.108,503,3.108,504,3.108,505,3.108,506,3.108]],["title/coverage.html",[507,3.556]],["body/coverage.html",[7,0.024,16,0.144,32,1.074,34,1.285,36,1.189,38,1.479,40,1.189,41,1.285,42,1.189,44,1.105,46,1.03,48,0.701,50,1.105,56,0.269,76,0.317,77,0.012,78,0.012,79,2.15,80,1.927,98,1.927,110,2.15,111,1.532,112,1.927,120,1.285,133,1.397,140,1.285,166,2.15,168,1.927,188,1.927,189,2.606,199,1.927,200,1.532,201,1.927,202,2.853,203,1.189,204,1.927,205,2.606,221,1.822,224,1.189,225,1.927,226,2.606,240,1.701,242,1.532,246,1.927,250,1.532,251,1.927,253,1.285,263,1.927,269,1.532,278,1.532,288,2.917,289,1.927,300,2.606,319,1.927,326,1.927,340,4.683,348,1.532,349,1.927,355,1.397,357,1.285,372,1.927,398,1.927,411,1.532,412,1.927,418,1.397,420,1.285,434,1.927,451,1.927,459,1.927,465,1.701,466,1.927,468,1.927,471,1.927,474,1.927,494,1.927,507,1.701,508,2.27,509,2.27,510,2.27,511,4.739,512,4.228,513,5.611,514,6.056,515,4.739,516,2.27,517,3.478,518,2.27,519,1.927,520,3.478,521,1.927,522,1.927,523,2.27,524,1.927,525,1.927,526,1.927,527,1.927,528,2.27]],["title/dependencies.html",[3,2.039,529,2.476]],["body/dependencies.html",[3,1.919,7,0.024,20,1.295,22,1.672,28,2.954,29,2.954,31,3.347,57,2.954,76,0.249,77,0.017,78,0.017,96,1.295,197,2.698,236,3.347,461,2.427,462,2.427,530,6.086,531,3.943,532,3.943,533,3.943,534,3.943,535,3.943,536,3.943,537,3.943,538,3.943,539,3.347,540,3.347,541,3.943,542,5.153,543,3.943,544,3.943,545,3.943,546,3.943,547,3.943,548,3.943,549,3.943,550,3.943,551,3.943,552,3.943,553,3.347]],["title/classes/documentValidator.html",[76,0.169,242,2.353]],["body/classes/documentValidator.html",[7,0.024,14,0.23,15,0.23,16,0.203,19,0.451,54,3.02,56,0.379,69,2.344,75,0.23,76,0.217,77,0.015,78,0.015,81,0.347,84,0.724,85,1.148,89,0.672,91,1.725,113,1.777,123,1.271,124,1.667,142,1.558,151,2.219,187,0.821,196,2.533,197,2.344,224,2.344,227,3.02,228,2.16,238,2.399,239,2.399,242,3.482,264,1.676,276,2.16,410,2.717,422,2.16,475,3.353,476,3.866,477,4.186,480,3.866,481,4.186,483,2.399,484,3.353,485,2.717,486,2.717,527,2.717,539,3.799,540,3.799,554,3.201,555,4.475,556,3.201,557,3.201,558,4.475,559,3.201,560,3.201,561,3.201]],["title/miscellaneous/enumerations.html",[562,1.651,563,3.556]],["body/miscellaneous/enumerations.html",[7,0.022,77,0.02,78,0.02,81,0.537,99,4.012,228,4.012,562,2.803,563,4.204,564,4.953,565,5.944,566,4.953,567,4.953,568,4.953,569,4.953,570,4.953]],["title/miscellaneous/functions.html",[562,1.651,571,3.556]],["body/miscellaneous/functions.html",[7,0.021,56,0.566,77,0.02,78,0.02,81,0.519,84,1.082,85,1.227,91,1.798,123,1.901,227,3.229,240,4.362,519,4.062,521,5.327,525,4.062,526,4.942,562,2.709,571,4.062,572,4.785,573,4.785,574,4.785]],["title/index.html",[81,0.316,575,2.917,576,2.917]],["body/index.html",[7,0.024,48,1.153,50,1.818,77,0.017,78,0.017,171,2.299,507,2.799,577,4.972,578,4.972,579,4.744,580,3.171,581,3.735,582,3.735,583,3.735,584,6.512,585,3.735,586,3.735,587,3.735,588,6.38,589,3.735,590,3.735,591,4.972,592,3.735,593,3.735,594,3.735,595,3.735,596,4.972,597,3.735,598,3.735,599,3.735,600,3.735,601,3.735,602,3.735,603,3.735,604,3.735,605,3.735,606,3.735,607,3.735,608,3.735,609,3.735,610,3.735,611,3.735,612,3.735]],["title/modules.html",[2,2.31]],["body/modules.html",[1,3.176,2,2.29,6,2.896,7,0.019,8,2.896,9,2.896,10,2.896,77,0.019,78,0.019,613,6.661,614,6.661,615,6.661,616,6.661]],["title/overview.html",[617,4.029]],["body/overview.html",[1,4.55,2,1.786,3,2.392,4,3.116,5,3.116,6,3.797,7,0.023,8,3.797,9,3.797,10,3.797,11,2.782,12,2.078,13,2.078,71,1.922,73,1.557,77,0.017,78,0.017,140,3.136,160,3.116,161,3.116,167,2.259,187,0.941,253,3.136,256,3.116,257,3.116,357,3.136,365,3.116,366,3.116,420,3.136,428,3.116,429,3.116,617,3.116,618,3.671,619,5.54,620,3.671]],["title/properties.html",[82,1.143,529,2.476]],["body/properties.html",[7,0.023,77,0.021,78,0.021,82,1.4,580,4.356,621,4.356,622,5.132,623,5.132,624,5.132,625,5.132]],["title/miscellaneous/variables.html",[562,1.651,626,3.556]],["body/miscellaneous/variables.html",[7,0.024,56,0.411,57,2.604,69,2.48,71,1.82,77,0.016,78,0.016,81,0.377,85,1.382,99,2.346,124,1.295,151,1.38,264,1.82,276,3.197,280,3.636,294,2.139,407,2.95,522,2.95,524,4.021,553,4.021,562,1.967,579,4.021,621,2.95,626,2.95,627,3.476,628,3.476,629,3.476,630,3.476,631,4.737,632,5.388,633,3.476,634,3.476,635,3.476,636,4.737,637,3.476,638,3.476,639,3.476,640,3.476,641,3.476,642,3.476,643,3.476,644,3.476,645,3.476,646,3.476,647,3.476,648,4.737,649,3.476,650,3.476,651,3.476,652,3.476]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"entities/Area.html":{},"entities/AreaValue.html":{},"controllers/AreasController.html":{},"modules/AreasModule.html":{},"injectables/AreasService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateDashboardDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/Dashboard.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{},"controllers/FarmsController.html":{},"modules/FarmsModule.html":{},"injectables/FarmsService.html":{},"entities/Producer.html":{},"controllers/ProducersController.html":{},"modules/ProducersModule.html":{},"injectables/ProducersService.html":{},"classes/ResponseDashboardDto.html":{},"classes/UpdateAreaDto.html":{},"classes/UpdateDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"coverage.html":{},"dependencies.html":{},"classes/documentValidator.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":340,"title":{},"body":{"entities/Farm.html":{},"injectables/FarmsService.html":{},"injectables/ProducersService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":622,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":396,"title":{"classes/areasValidator-1.html":{}},"body":{"injectables/FarmsService.html":{},"injectables/ProducersService.html":{}}}],["1.0.3",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":620,"title":{},"body":{"overview.html":{}}}],["2.3.1",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["2.6.12",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["3.3.4",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":619,"title":{},"body":{"overview.html":{}}}],["5",{"_index":618,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["8.10.0",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addselect(\"area.name",{"_index":311,"title":{},"body":{"classes/DashboardTotalFarmsPlantingType.html":{}}}],["addselect(\"farm.state",{"_index":324,"title":{},"body":{"classes/DashboardTotalFarmsState.html":{}}}],["addselect(\"sum(areavalue.value",{"_index":310,"title":{},"body":{"classes/DashboardTotalFarmsPlantingType.html":{}}}],["addselect(\"sum(farm.totalarea",{"_index":298,"title":{},"body":{"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsState.html":{}}}],["addselect(\"sum(farm.totalvegetationarea",{"_index":304,"title":{},"body":{"classes/DashboardTotalFarmsAreaType.html":{}}}],["agriculture",{"_index":578,"title":{},"body":{"index.html":{}}}],["app",{"_index":586,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arable",{"_index":504,"title":{},"body":{"classes/areasValidator-1.html":{}}}],["area",{"_index":32,"title":{"entities/Area.html":{}},"body":{"modules/AppModule.html":{},"entities/Area.html":{},"entities/AreaValue.html":{},"modules/AreasModule.html":{},"injectables/AreasService.html":{},"classes/CreateAreaDto.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"entities/Farm.html":{},"classes/ResponseDashboardDto.html":{},"classes/areasValidator-1.html":{},"coverage.html":{}}}],["area.dto",{"_index":143,"title":{},"body":{"controllers/AreasController.html":{},"injectables/AreasService.html":{},"classes/UpdateAreaDto.html":{}}}],["area.dto.ts",{"_index":189,"title":{},"body":{"classes/CreateAreaDto.html":{},"classes/UpdateAreaDto.html":{},"coverage.html":{}}}],["area.dto.ts:7",{"_index":193,"title":{},"body":{"classes/CreateAreaDto.html":{}}}],["area.dto.ts:9",{"_index":190,"title":{},"body":{"classes/CreateAreaDto.html":{}}}],["area.farm",{"_index":330,"title":{},"body":{"entities/Farm.html":{}}}],["area.id",{"_index":316,"title":{},"body":{"classes/DashboardTotalFarmsPlantingType.html":{}}}],["area.value.entity",{"_index":346,"title":{},"body":{"entities/Farm.html":{}}}],["arearepository",{"_index":173,"title":{},"body":{"injectables/AreasService.html":{}}}],["areas",{"_index":146,"title":{},"body":{"controllers/AreasController.html":{},"classes/CreateFarmDto.html":{},"entities/Farm.html":{},"injectables/FarmsService.html":{},"classes/areasValidator.html":{}}}],["areas','areas.area",{"_index":388,"title":{},"body":{"injectables/FarmsService.html":{}}}],["areas.area",{"_index":390,"title":{},"body":{"injectables/FarmsService.html":{}}}],["areas.controller",{"_index":163,"title":{},"body":{"modules/AreasModule.html":{}}}],["areas.service",{"_index":141,"title":{},"body":{"controllers/AreasController.html":{},"modules/AreasModule.html":{}}}],["areas/areas.module",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["areas/entities/area.entity",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"entities/AreaValue.html":{},"classes/DashboardTotalFarmsPlantingType.html":{}}}],["areascontroller",{"_index":111,"title":{"controllers/AreasController.html":{}},"body":{"controllers/AreasController.html":{},"modules/AreasModule.html":{},"coverage.html":{}}}],["areasmodule",{"_index":6,"title":{"modules/AreasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AreasModule.html":{},"modules.html":{},"overview.html":{}}}],["areasservice",{"_index":140,"title":{"injectables/AreasService.html":{}},"body":{"controllers/AreasController.html":{},"modules/AreasModule.html":{},"injectables/AreasService.html":{},"coverage.html":{},"overview.html":{}}}],["areasvalidator",{"_index":221,"title":{"classes/areasValidator.html":{},"classes/areasValidator-1.html":{}},"body":{"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"coverage.html":{}}}],["areavalue",{"_index":46,"title":{"entities/AreaValue.html":{}},"body":{"modules/AppModule.html":{},"entities/AreaValue.html":{},"classes/CreateFarmDto.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"entities/Farm.html":{},"modules/FarmsModule.html":{},"injectables/FarmsService.html":{},"coverage.html":{}}}],["areavalue.area.id",{"_index":317,"title":{},"body":{"classes/DashboardTotalFarmsPlantingType.html":{}}}],["areavalue.farm.id",{"_index":313,"title":{},"body":{"classes/DashboardTotalFarmsPlantingType.html":{}}}],["areavaluerepository",{"_index":374,"title":{},"body":{"injectables/FarmsService.html":{}}}],["args",{"_index":480,"title":{},"body":{"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{}}}],["args.object",{"_index":486,"title":{},"body":{"classes/areasValidator.html":{},"classes/documentValidator.html":{}}}],["async",{"_index":264,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/FarmsService.html":{},"injectables/ProducersService.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":625,"title":{},"body":{"properties.html":{}}}],["autocreateforeignkeyindices",{"_index":630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["await",{"_index":280,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/FarmsService.html":{},"injectables/ProducersService.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":136,"title":{},"body":{"controllers/AreasController.html":{},"controllers/FarmsController.html":{},"controllers/ProducersController.html":{}}}],["boolean",{"_index":483,"title":{},"body":{"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{}}}],["bootstrap",{"_index":521,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["brain",{"_index":577,"title":{},"body":{"index.html":{}}}],["browse",{"_index":616,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":613,"title":{},"body":{"modules.html":{}}}],["c.value",{"_index":490,"title":{},"body":{"classes/areasValidator.html":{},"classes/areasValidator-1.html":{}}}],["cascade",{"_index":104,"title":{},"body":{"entities/AreaValue.html":{},"entities/Farm.html":{},"entities/Producer.html":{}}}],["city",{"_index":206,"title":{},"body":{"classes/CreateFarmDto.html":{},"entities/Farm.html":{}}}],["class",{"_index":76,"title":{"classes/CreateAreaDto.html":{},"classes/CreateDashboardDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/Dashboard.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"classes/ResponseDashboardDto.html":{},"classes/UpdateAreaDto.html":{},"classes/UpdateDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{}},"body":{"modules/AppModule.html":{},"entities/Area.html":{},"entities/AreaValue.html":{},"controllers/AreasController.html":{},"modules/AreasModule.html":{},"injectables/AreasService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateDashboardDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/Dashboard.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{},"controllers/FarmsController.html":{},"modules/FarmsModule.html":{},"injectables/FarmsService.html":{},"entities/Producer.html":{},"controllers/ProducersController.html":{},"modules/ProducersModule.html":{},"injectables/ProducersService.html":{},"classes/ResponseDashboardDto.html":{},"classes/UpdateAreaDto.html":{},"classes/UpdateDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"coverage.html":{},"dependencies.html":{},"classes/documentValidator.html":{}}}],["classes",{"_index":187,"title":{},"body":{"classes/CreateAreaDto.html":{},"classes/CreateDashboardDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/Dashboard.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"classes/ResponseDashboardDto.html":{},"classes/UpdateAreaDto.html":{},"classes/UpdateDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_areasmodule",{"_index":160,"title":{},"body":{"modules/AreasModule.html":{},"overview.html":{}}}],["cluster_areasmodule_providers",{"_index":161,"title":{},"body":{"modules/AreasModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule",{"_index":256,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_providers",{"_index":257,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_farmsmodule",{"_index":365,"title":{},"body":{"modules/FarmsModule.html":{},"overview.html":{}}}],["cluster_farmsmodule_providers",{"_index":366,"title":{},"body":{"modules/FarmsModule.html":{},"overview.html":{}}}],["cluster_producersmodule",{"_index":428,"title":{},"body":{"modules/ProducersModule.html":{},"overview.html":{}}}],["cluster_producersmodule_providers",{"_index":429,"title":{},"body":{"modules/ProducersModule.html":{},"overview.html":{}}}],["cnpj",{"_index":540,"title":{},"body":{"dependencies.html":{},"classes/documentValidator.html":{}}}],["cnpj.isvalid(document",{"_index":559,"title":{},"body":{"classes/documentValidator.html":{}}}],["column",{"_index":94,"title":{},"body":{"entities/Area.html":{},"entities/AreaValue.html":{},"classes/CreateAreaDto.html":{},"classes/Dashboard.html":{},"entities/Farm.html":{},"entities/Producer.html":{}}}],["column({default",{"_index":339,"title":{},"body":{"entities/Farm.html":{}}}],["column({default:0",{"_index":347,"title":{},"body":{"entities/Farm.html":{}}}],["column({type",{"_index":405,"title":{},"body":{"entities/Producer.html":{}}}],["column({unique",{"_index":92,"title":{},"body":{"entities/Area.html":{}}}],["configmodule",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":276,"title":{},"body":{"injectables/DashboardService.html":{},"classes/areasValidator.html":{},"classes/documentValidator.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":169,"title":{},"body":{"injectables/AreasService.html":{},"injectables/DashboardService.html":{},"injectables/FarmsService.html":{},"injectables/ProducersService.html":{}}}],["constructor(arearepository",{"_index":170,"title":{},"body":{"injectables/AreasService.html":{}}}],["constructor(dashboardtotalfarms",{"_index":265,"title":{},"body":{"injectables/DashboardService.html":{}}}],["constructor(farmrepository",{"_index":373,"title":{},"body":{"injectables/FarmsService.html":{}}}],["constructor(private",{"_index":148,"title":{},"body":{"controllers/AreasController.html":{},"controllers/DashboardController.html":{},"controllers/FarmsController.html":{},"controllers/ProducersController.html":{}}}],["constructor(producerrepository",{"_index":435,"title":{},"body":{"injectables/ProducersService.html":{}}}],["controller",{"_index":110,"title":{"controllers/AreasController.html":{},"controllers/DashboardController.html":{},"controllers/FarmsController.html":{},"controllers/ProducersController.html":{}},"body":{"controllers/AreasController.html":{},"controllers/DashboardController.html":{},"controllers/FarmsController.html":{},"controllers/ProducersController.html":{},"coverage.html":{}}}],["controller({path",{"_index":145,"title":{},"body":{"controllers/AreasController.html":{},"controllers/DashboardController.html":{},"controllers/FarmsController.html":{},"controllers/ProducersController.html":{}}}],["controllers",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"controllers/AreasController.html":{},"modules/AreasModule.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"controllers/FarmsController.html":{},"modules/FarmsModule.html":{},"controllers/ProducersController.html":{},"modules/ProducersModule.html":{},"overview.html":{}}}],["corbe",{"_index":610,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":507,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cpf",{"_index":539,"title":{},"body":{"dependencies.html":{},"classes/documentValidator.html":{}}}],["cpf.isvalid(document",{"_index":557,"title":{},"body":{"classes/documentValidator.html":{}}}],["create",{"_index":114,"title":{},"body":{"controllers/AreasController.html":{},"injectables/AreasService.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{},"classes/UpdateAreaDto.html":{},"classes/UpdateDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{}}}],["create(@body",{"_index":150,"title":{},"body":{"controllers/AreasController.html":{},"controllers/FarmsController.html":{},"controllers/ProducersController.html":{}}}],["create(createareadto",{"_index":119,"title":{},"body":{"controllers/AreasController.html":{},"injectables/AreasService.html":{}}}],["create(createfarmdto",{"_index":350,"title":{},"body":{"controllers/FarmsController.html":{},"injectables/FarmsService.html":{}}}],["create(createproducerdto",{"_index":413,"title":{},"body":{"controllers/ProducersController.html":{}}}],["create(updateproducerdto",{"_index":438,"title":{},"body":{"injectables/ProducersService.html":{}}}],["createareadto",{"_index":120,"title":{"classes/CreateAreaDto.html":{}},"body":{"controllers/AreasController.html":{},"injectables/AreasService.html":{},"classes/CreateAreaDto.html":{},"classes/UpdateAreaDto.html":{},"coverage.html":{}}}],["createdashboarddto",{"_index":200,"title":{"classes/CreateDashboardDto.html":{}},"body":{"classes/CreateDashboardDto.html":{},"classes/UpdateDashboardDto.html":{},"coverage.html":{}}}],["createfarmdto",{"_index":203,"title":{"classes/CreateFarmDto.html":{}},"body":{"classes/CreateFarmDto.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"classes/UpdateFarmDto.html":{},"classes/areasValidator.html":{},"coverage.html":{}}}],["createproducerdto",{"_index":224,"title":{"classes/CreateProducerDto.html":{}},"body":{"classes/CreateProducerDto.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{},"classes/UpdateProducerDto.html":{},"coverage.html":{},"classes/documentValidator.html":{}}}],["createquerybuilder",{"_index":296,"title":{},"body":{"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{}}}],["current",{"_index":492,"title":{},"body":{"classes/areasValidator.html":{},"classes/areasValidator-1.html":{}}}],["current_database",{"_index":633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["daniel",{"_index":609,"title":{},"body":{"index.html":{}}}],["dashboard",{"_index":34,"title":{"classes/Dashboard.html":{}},"body":{"modules/AppModule.html":{},"classes/Dashboard.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"coverage.html":{}}}],["dashboard.controller",{"_index":259,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard.dto",{"_index":271,"title":{},"body":{"injectables/DashboardService.html":{},"classes/UpdateDashboardDto.html":{}}}],["dashboard.dto.ts",{"_index":202,"title":{},"body":{"classes/CreateDashboardDto.html":{},"classes/ResponseDashboardDto.html":{},"classes/UpdateDashboardDto.html":{},"coverage.html":{}}}],["dashboard.dto.ts:10",{"_index":457,"title":{},"body":{"classes/ResponseDashboardDto.html":{}}}],["dashboard.dto.ts:11",{"_index":456,"title":{},"body":{"classes/ResponseDashboardDto.html":{}}}],["dashboard.dto.ts:8",{"_index":455,"title":{},"body":{"classes/ResponseDashboardDto.html":{}}}],["dashboard.dto.ts:9",{"_index":458,"title":{},"body":{"classes/ResponseDashboardDto.html":{}}}],["dashboard.service",{"_index":254,"title":{},"body":{"controllers/DashboardController.html":{},"modules/DashboardModule.html":{}}}],["dashboard.total",{"_index":249,"title":{},"body":{"classes/Dashboard.html":{}}}],["dashboard/dashboard.module",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboard/entities/dashboard.entity",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboard/entities/dashboard.total",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboardcontroller",{"_index":250,"title":{"controllers/DashboardController.html":{}},"body":{"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"coverage.html":{}}}],["dashboardmodule",{"_index":8,"title":{"modules/DashboardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardservice",{"_index":253,"title":{"injectables/DashboardService.html":{}},"body":{"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"coverage.html":{},"overview.html":{}}}],["dashboardtotalfarms",{"_index":44,"title":{"classes/DashboardTotalFarms.html":{}},"body":{"modules/AppModule.html":{},"classes/Dashboard.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarms.html":{},"classes/ResponseDashboardDto.html":{},"coverage.html":{}}}],["dashboardtotalfarmsareatype",{"_index":36,"title":{"classes/DashboardTotalFarmsAreaType.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/ResponseDashboardDto.html":{},"coverage.html":{}}}],["dashboardtotalfarmsplantingtype",{"_index":40,"title":{"classes/DashboardTotalFarmsPlantingType.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/ResponseDashboardDto.html":{},"coverage.html":{}}}],["dashboardtotalfarmsstate",{"_index":42,"title":{"classes/DashboardTotalFarmsState.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarmsState.html":{},"classes/ResponseDashboardDto.html":{},"coverage.html":{}}}],["data",{"_index":485,"title":{},"body":{"classes/areasValidator.html":{},"classes/documentValidator.html":{}}}],["data.areas",{"_index":488,"title":{},"body":{"classes/areasValidator.html":{}}}],["data.persontype",{"_index":558,"title":{},"body":{"classes/documentValidator.html":{}}}],["data.totalvegetationarea",{"_index":493,"title":{},"body":{"classes/areasValidator.html":{}}}],["database",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["datasource",{"_index":294,"title":{},"body":{"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"miscellaneous/variables.html":{}}}],["datatype.uuid",{"_index":645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db",{"_index":628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db.adapters.createtypeormdatasource",{"_index":649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db.public.registerfunction",{"_index":631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db.registerextension('uuid",{"_index":641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbvalidator",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateAreaDto.html":{},"dependencies.html":{}}}],["dbvalidatorsmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["dbvalidatorsmodule.register",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":87,"title":{},"body":{"entities/Area.html":{},"entities/AreaValue.html":{},"controllers/AreasController.html":{},"classes/CreateAreaDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/Dashboard.html":{},"controllers/DashboardController.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{},"controllers/FarmsController.html":{},"entities/Producer.html":{},"controllers/ProducersController.html":{}}}],["default",{"_index":407,"title":{},"body":{"entities/Producer.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":477,"title":{},"body":{"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{}}}],["defined",{"_index":89,"title":{},"body":{"entities/Area.html":{},"entities/AreaValue.html":{},"controllers/AreasController.html":{},"injectables/AreasService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/Dashboard.html":{},"controllers/DashboardController.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"entities/Producer.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{},"classes/ResponseDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{}}}],["delete",{"_index":139,"title":{},"body":{"controllers/AreasController.html":{},"controllers/FarmsController.html":{},"controllers/ProducersController.html":{}}}],["delete(':id",{"_index":130,"title":{},"body":{"controllers/AreasController.html":{},"controllers/FarmsController.html":{},"controllers/ProducersController.html":{}}}],["demonstrate",{"_index":607,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AreasModule.html":{},"modules/DashboardModule.html":{},"modules/FarmsModule.html":{},"modules/ProducersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":580,"title":{},"body":{"index.html":{},"properties.html":{}}}],["develope",{"_index":600,"title":{},"body":{"index.html":{}}}],["development",{"_index":587,"title":{},"body":{"index.html":{}}}],["document",{"_index":227,"title":{},"body":{"classes/CreateProducerDto.html":{},"entities/Producer.html":{},"classes/documentValidator.html":{},"miscellaneous/functions.html":{}}}],["documentation",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["documenttransform",{"_index":240,"title":{},"body":{"classes/CreateProducerDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["documenttransform(document",{"_index":574,"title":{},"body":{"miscellaneous/functions.html":{}}}],["documenttransform(value",{"_index":245,"title":{},"body":{"classes/CreateProducerDto.html":{}}}],["documentvalidator",{"_index":242,"title":{"classes/documentValidator.html":{}},"body":{"classes/CreateProducerDto.html":{},"coverage.html":{},"classes/documentValidator.html":{}}}],["ds",{"_index":648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ds.initialize",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ds.synchronize",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto/create",{"_index":142,"title":{},"body":{"controllers/AreasController.html":{},"injectables/AreasService.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{},"classes/areasValidator.html":{},"classes/documentValidator.html":{}}}],["dto/response",{"_index":270,"title":{},"body":{"injectables/DashboardService.html":{}}}],["dto/update",{"_index":144,"title":{},"body":{"controllers/AreasController.html":{},"injectables/AreasService.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{}}}],["e2e",{"_index":597,"title":{},"body":{"index.html":{}}}],["element.areas",{"_index":500,"title":{},"body":{"classes/areasValidator-1.html":{}}}],["element.totalarablearea",{"_index":503,"title":{},"body":{"classes/areasValidator-1.html":{}}}],["element.totalarea",{"_index":502,"title":{},"body":{"classes/areasValidator-1.html":{}}}],["element.totalvegetationarea",{"_index":501,"title":{},"body":{"classes/areasValidator-1.html":{}}}],["entities",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"entities/Area.html":{},"entities/AreaValue.html":{},"entities/Farm.html":{},"entities/Producer.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/area.entity",{"_index":164,"title":{},"body":{"modules/AreasModule.html":{},"injectables/AreasService.html":{}}}],["entities/area.value.entity",{"_index":370,"title":{},"body":{"modules/FarmsModule.html":{},"injectables/FarmsService.html":{}}}],["entities/dashboard.entity",{"_index":260,"title":{},"body":{"modules/DashboardModule.html":{}}}],["entities/dashboard.total",{"_index":261,"title":{},"body":{"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/ResponseDashboardDto.html":{}}}],["entities/farm.entity",{"_index":369,"title":{},"body":{"modules/FarmsModule.html":{},"injectables/FarmsService.html":{}}}],["entities/producer.entity",{"_index":432,"title":{},"body":{"modules/ProducersModule.html":{},"injectables/ProducersService.html":{}}}],["entity",{"_index":79,"title":{"entities/Area.html":{},"entities/AreaValue.html":{},"entities/Farm.html":{},"entities/Producer.html":{}},"body":{"entities/Area.html":{},"entities/AreaValue.html":{},"entities/Farm.html":{},"entities/Producer.html":{},"coverage.html":{}}}],["entity{.ts,.js",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":406,"title":{},"body":{"entities/Producer.html":{}}}],["enumerations",{"_index":563,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/person",{"_index":238,"title":{},"body":{"classes/CreateProducerDto.html":{},"entities/Producer.html":{},"classes/documentValidator.html":{}}}],["error",{"_index":498,"title":{},"body":{"classes/areasValidator-1.html":{}}}],["export",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"entities/Area.html":{},"entities/AreaValue.html":{},"controllers/AreasController.html":{},"modules/AreasModule.html":{},"injectables/AreasService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateDashboardDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/Dashboard.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{},"controllers/FarmsController.html":{},"modules/FarmsModule.html":{},"injectables/FarmsService.html":{},"entities/Producer.html":{},"controllers/ProducersController.html":{},"modules/ProducersModule.html":{},"injectables/ProducersService.html":{},"classes/ResponseDashboardDto.html":{},"classes/UpdateAreaDto.html":{},"classes/UpdateDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{}}}],["express",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["expression",{"_index":295,"title":{},"body":{"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{}}}],["extends",{"_index":463,"title":{},"body":{"classes/UpdateAreaDto.html":{},"classes/UpdateDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{}}}],["extension",{"_index":637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":569,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{}}}],["farm",{"_index":48,"title":{"entities/Farm.html":{}},"body":{"modules/AppModule.html":{},"entities/AreaValue.html":{},"classes/CreateProducerDto.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{},"modules/FarmsModule.html":{},"injectables/FarmsService.html":{},"entities/Producer.html":{},"classes/areasValidator-1.html":{},"coverage.html":{},"index.html":{}}}],["farm.areas",{"_index":102,"title":{},"body":{"entities/AreaValue.html":{}}}],["farm.dto",{"_index":359,"title":{},"body":{"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"classes/UpdateFarmDto.html":{},"classes/areasValidator.html":{}}}],["farm.dto.ts",{"_index":205,"title":{},"body":{"classes/CreateFarmDto.html":{},"classes/UpdateFarmDto.html":{},"coverage.html":{}}}],["farm.dto.ts:12",{"_index":212,"title":{},"body":{"classes/CreateFarmDto.html":{}}}],["farm.dto.ts:15",{"_index":215,"title":{},"body":{"classes/CreateFarmDto.html":{}}}],["farm.dto.ts:19",{"_index":218,"title":{},"body":{"classes/CreateFarmDto.html":{}}}],["farm.dto.ts:21",{"_index":216,"title":{},"body":{"classes/CreateFarmDto.html":{}}}],["farm.dto.ts:24",{"_index":219,"title":{},"body":{"classes/CreateFarmDto.html":{}}}],["farm.dto.ts:26",{"_index":211,"title":{},"body":{"classes/CreateFarmDto.html":{}}}],["farm.dto.ts:5",{"_index":469,"title":{},"body":{"classes/UpdateFarmDto.html":{}}}],["farm.dto.ts:6",{"_index":213,"title":{},"body":{"classes/CreateFarmDto.html":{}}}],["farm.dto.ts:9",{"_index":214,"title":{},"body":{"classes/CreateFarmDto.html":{}}}],["farm.entity",{"_index":108,"title":{},"body":{"entities/AreaValue.html":{}}}],["farm.id",{"_index":314,"title":{},"body":{"classes/DashboardTotalFarmsPlantingType.html":{}}}],["farm.producers",{"_index":400,"title":{},"body":{"entities/Producer.html":{}}}],["farmrepository",{"_index":376,"title":{},"body":{"injectables/FarmsService.html":{}}}],["farms",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateProducerDto.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"controllers/FarmsController.html":{},"entities/Producer.html":{},"injectables/ProducersService.html":{},"classes/ResponseDashboardDto.html":{},"classes/areasValidator-1.html":{},"coverage.html":{}}}],["farms.areas','farms.areas.area",{"_index":447,"title":{},"body":{"injectables/ProducersService.html":{}}}],["farms.controller",{"_index":368,"title":{},"body":{"modules/FarmsModule.html":{}}}],["farms.entity",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"classes/Dashboard.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/ResponseDashboardDto.html":{}}}],["farms.entity.ts",{"_index":289,"title":{},"body":{"classes/DashboardTotalFarms.html":{},"coverage.html":{}}}],["farms.entity.ts:17",{"_index":292,"title":{},"body":{"classes/DashboardTotalFarms.html":{}}}],["farms.entity.ts:20",{"_index":291,"title":{},"body":{"classes/DashboardTotalFarms.html":{}}}],["farms.foreach(element",{"_index":499,"title":{},"body":{"classes/areasValidator-1.html":{}}}],["farms.service",{"_index":358,"title":{},"body":{"controllers/FarmsController.html":{},"modules/FarmsModule.html":{}}}],["farms/entities/area.value.entity",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"classes/DashboardTotalFarmsPlantingType.html":{}}}],["farms/entities/farm.entity",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Producer.html":{}}}],["farms/farms.module",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["farmsbyareatype",{"_index":452,"title":{},"body":{"classes/ResponseDashboardDto.html":{}}}],["farmsbyplantingtype",{"_index":453,"title":{},"body":{"classes/ResponseDashboardDto.html":{}}}],["farmsbystate",{"_index":454,"title":{},"body":{"classes/ResponseDashboardDto.html":{}}}],["farmscontroller",{"_index":348,"title":{"controllers/FarmsController.html":{}},"body":{"controllers/FarmsController.html":{},"modules/FarmsModule.html":{},"coverage.html":{}}}],["farmsmodule",{"_index":9,"title":{"modules/FarmsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FarmsModule.html":{},"modules.html":{},"overview.html":{}}}],["farmsservice",{"_index":357,"title":{"injectables/FarmsService.html":{}},"body":{"controllers/FarmsController.html":{},"modules/FarmsModule.html":{},"injectables/FarmsService.html":{},"coverage.html":{},"overview.html":{}}}],["file",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"entities/Area.html":{},"entities/AreaValue.html":{},"controllers/AreasController.html":{},"modules/AreasModule.html":{},"injectables/AreasService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateDashboardDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/Dashboard.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{},"controllers/FarmsController.html":{},"modules/FarmsModule.html":{},"injectables/FarmsService.html":{},"entities/Producer.html":{},"controllers/ProducersController.html":{},"modules/ProducersModule.html":{},"injectables/ProducersService.html":{},"classes/ResponseDashboardDto.html":{},"classes/UpdateAreaDto.html":{},"classes/UpdateDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"coverage.html":{},"classes/documentValidator.html":{}}}],["findall",{"_index":115,"title":{},"body":{"controllers/AreasController.html":{},"injectables/AreasService.html":{},"controllers/DashboardController.html":{},"injectables/DashboardService.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{}}}],["findone",{"_index":116,"title":{},"body":{"controllers/AreasController.html":{},"injectables/AreasService.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{}}}],["findone(@param('id",{"_index":154,"title":{},"body":{"controllers/AreasController.html":{},"controllers/FarmsController.html":{},"controllers/ProducersController.html":{}}}],["findone(id",{"_index":126,"title":{},"body":{"controllers/AreasController.html":{},"injectables/AreasService.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{}}}],["fisica",{"_index":570,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["framework",{"_index":602,"title":{},"body":{"index.html":{}}}],["from(farm",{"_index":299,"title":{},"body":{"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{}}}],["function",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":571,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":127,"title":{},"body":{"controllers/AreasController.html":{},"controllers/FarmsController.html":{},"controllers/ProducersController.html":{}}}],["getting",{"_index":575,"title":{"index.html":{}},"body":{}}],["greater",{"_index":506,"title":{},"body":{"classes/areasValidator-1.html":{}}}],["groupby(\"area.id",{"_index":318,"title":{},"body":{"classes/DashboardTotalFarmsPlantingType.html":{}}}],["groupby(\"farm.state",{"_index":325,"title":{},"body":{"classes/DashboardTotalFarmsState.html":{}}}],["hahne",{"_index":611,"title":{},"body":{"index.html":{}}}],["host",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["id",{"_index":83,"title":{},"body":{"entities/Area.html":{},"entities/AreaValue.html":{},"controllers/AreasController.html":{},"injectables/AreasService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"entities/Farm.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"entities/Producer.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{}}}],["identifier",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["ignoreenvfile",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["implementation",{"_index":632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":475,"title":{},"body":{"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{}}}],["import",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"entities/Area.html":{},"entities/AreaValue.html":{},"controllers/AreasController.html":{},"modules/AreasModule.html":{},"injectables/AreasService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/Dashboard.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{},"controllers/FarmsController.html":{},"modules/FarmsModule.html":{},"injectables/FarmsService.html":{},"entities/Producer.html":{},"controllers/ProducersController.html":{},"modules/ProducersModule.html":{},"injectables/ProducersService.html":{},"classes/ResponseDashboardDto.html":{},"classes/UpdateAreaDto.html":{},"classes/UpdateDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{}}}],["imports",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AreasModule.html":{},"modules/DashboardModule.html":{},"modules/FarmsModule.html":{},"modules/ProducersModule.html":{}}}],["impure",{"_index":647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":81,"title":{"index.html":{}},"body":{"entities/Area.html":{},"entities/AreaValue.html":{},"controllers/AreasController.html":{},"injectables/AreasService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/Dashboard.html":{},"controllers/DashboardController.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"entities/Producer.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{},"classes/ResponseDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"entities/Area.html":{},"entities/AreaValue.html":{},"controllers/AreasController.html":{},"modules/AreasModule.html":{},"injectables/AreasService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateDashboardDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/Dashboard.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{},"controllers/FarmsController.html":{},"modules/FarmsModule.html":{},"injectables/FarmsService.html":{},"entities/Producer.html":{},"controllers/ProducersController.html":{},"modules/ProducersModule.html":{},"injectables/ProducersService.html":{},"classes/ResponseDashboardDto.html":{},"classes/UpdateAreaDto.html":{},"classes/UpdateDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{}}}],["injectable",{"_index":166,"title":{"injectables/AreasService.html":{},"injectables/DashboardService.html":{},"injectables/FarmsService.html":{},"injectables/ProducersService.html":{}},"body":{"injectables/AreasService.html":{},"injectables/DashboardService.html":{},"injectables/FarmsService.html":{},"injectables/ProducersService.html":{},"coverage.html":{}}}],["injectables",{"_index":167,"title":{},"body":{"injectables/AreasService.html":{},"injectables/DashboardService.html":{},"injectables/FarmsService.html":{},"injectables/ProducersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":179,"title":{},"body":{"injectables/AreasService.html":{},"injectables/DashboardService.html":{},"injectables/FarmsService.html":{},"injectables/ProducersService.html":{}}}],["injectrepository(area",{"_index":180,"title":{},"body":{"injectables/AreasService.html":{}}}],["injectrepository(areavalue",{"_index":384,"title":{},"body":{"injectables/FarmsService.html":{}}}],["injectrepository(dashboardtotalfarms",{"_index":272,"title":{},"body":{"injectables/DashboardService.html":{}}}],["injectrepository(dashboardtotalfarmsareatype",{"_index":275,"title":{},"body":{"injectables/DashboardService.html":{}}}],["injectrepository(dashboardtotalfarmsplantingtype",{"_index":274,"title":{},"body":{"injectables/DashboardService.html":{}}}],["injectrepository(dashboardtotalfarmsstate",{"_index":273,"title":{},"body":{"injectables/DashboardService.html":{}}}],["injectrepository(farm",{"_index":383,"title":{},"body":{"injectables/FarmsService.html":{}}}],["injectrepository(producer",{"_index":444,"title":{},"body":{"injectables/ProducersService.html":{}}}],["innerjoin(area,\"area",{"_index":315,"title":{},"body":{"classes/DashboardTotalFarmsPlantingType.html":{}}}],["innerjoin(areavalue,\"areavalue",{"_index":312,"title":{},"body":{"classes/DashboardTotalFarmsPlantingType.html":{}}}],["installation",{"_index":583,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":585,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":561,"title":{},"body":{"classes/documentValidator.html":{}}}],["isnotempty",{"_index":195,"title":{},"body":{"classes/CreateAreaDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{}}}],["isnotempty()@validate(areasvalidator",{"_index":217,"title":{},"body":{"classes/CreateFarmDto.html":{}}}],["isnotempty()@validate(documentvalidator)@transform",{"_index":229,"title":{},"body":{"classes/CreateProducerDto.html":{}}}],["isnotempty()@validate(isunique",{"_index":191,"title":{},"body":{"classes/CreateAreaDto.html":{}}}],["isunique",{"_index":194,"title":{},"body":{"classes/CreateAreaDto.html":{}}}],["j",{"_index":567,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["jointable",{"_index":409,"title":{},"body":{"entities/Producer.html":{}}}],["juridica",{"_index":568,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["keys",{"_index":640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["latorre",{"_index":612,"title":{},"body":{"index.html":{}}}],["license",{"_index":623,"title":{},"body":{"properties.html":{}}}],["logging",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["management",{"_index":581,"title":{},"body":{"index.html":{}}}],["manytomany",{"_index":344,"title":{},"body":{"entities/Farm.html":{},"entities/Producer.html":{}}}],["manytomany(undefined",{"_index":335,"title":{},"body":{"entities/Farm.html":{},"entities/Producer.html":{}}}],["manytoone",{"_index":109,"title":{},"body":{"entities/AreaValue.html":{}}}],["manytoone(undefined",{"_index":100,"title":{},"body":{"entities/AreaValue.html":{}}}],["map(c",{"_index":489,"title":{},"body":{"classes/areasValidator.html":{},"classes/areasValidator-1.html":{}}}],["matching",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"entities/Area.html":{},"entities/AreaValue.html":{},"controllers/AreasController.html":{},"modules/AreasModule.html":{},"injectables/AreasService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateDashboardDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/Dashboard.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{},"controllers/FarmsController.html":{},"modules/FarmsModule.html":{},"injectables/FarmsService.html":{},"entities/Producer.html":{},"controllers/ProducersController.html":{},"modules/ProducersModule.html":{},"injectables/ProducersService.html":{},"classes/ResponseDashboardDto.html":{},"classes/UpdateAreaDto.html":{},"classes/UpdateDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"coverage.html":{},"dependencies.html":{},"classes/documentValidator.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mem",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["metadata",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":113,"title":{},"body":{"controllers/AreasController.html":{},"injectables/AreasService.html":{},"controllers/DashboardController.html":{},"injectables/DashboardService.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{}}}],["miscellaneous",{"_index":562,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":591,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AreasModule.html":{},"modules/DashboardModule.html":{},"modules/FarmsModule.html":{},"modules/ProducersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AreasModule.html":{},"modules/DashboardModule.html":{},"modules/FarmsModule.html":{},"modules/ProducersModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AreasModule.html":{},"modules/DashboardModule.html":{},"modules/FarmsModule.html":{},"modules/ProducersModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":85,"title":{},"body":{"entities/Area.html":{},"controllers/AreasController.html":{},"injectables/AreasService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"injectables/DashboardService.html":{},"entities/Farm.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"entities/Producer.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":601,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"controllers/AreasController.html":{},"modules/AreasModule.html":{},"injectables/AreasService.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"controllers/FarmsController.html":{},"modules/FarmsModule.html":{},"injectables/FarmsService.html":{},"controllers/ProducersController.html":{},"modules/ProducersModule.html":{},"injectables/ProducersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":461,"title":{},"body":{"classes/UpdateAreaDto.html":{},"classes/UpdateDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AreasModule.html":{},"injectables/AreasService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"modules/FarmsModule.html":{},"injectables/FarmsService.html":{},"modules/ProducersModule.html":{},"injectables/ProducersService.html":{},"dependencies.html":{}}}],["new",{"_index":278,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/FarmsService.html":{},"injectables/ProducersService.html":{},"coverage.html":{}}}],["newdb",{"_index":629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":584,"title":{},"body":{"index.html":{}}}],["number",{"_index":86,"title":{},"body":{"entities/Area.html":{},"entities/AreaValue.html":{},"injectables/AreasService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{},"injectables/FarmsService.html":{},"entities/Producer.html":{},"injectables/ProducersService.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{},"classes/areasValidator.html":{}}}],["ondelete",{"_index":103,"title":{},"body":{"entities/AreaValue.html":{},"entities/Farm.html":{}}}],["onetomany",{"_index":345,"title":{},"body":{"entities/Farm.html":{}}}],["onetomany(undefined",{"_index":329,"title":{},"body":{"entities/Farm.html":{}}}],["opportunity",{"_index":606,"title":{},"body":{"index.html":{}}}],["optional",{"_index":84,"title":{},"body":{"entities/Area.html":{},"entities/AreaValue.html":{},"controllers/AreasController.html":{},"injectables/AreasService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"injectables/DashboardService.html":{},"entities/Farm.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"entities/Producer.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{},"miscellaneous/functions.html":{}}}],["ossp",{"_index":636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["out",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/AreasModule.html":{},"modules/DashboardModule.html":{},"modules/FarmsModule.html":{},"modules/ProducersModule.html":{},"overview.html":{}}}],["overview",{"_index":617,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":529,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":138,"title":{},"body":{"controllers/AreasController.html":{},"controllers/FarmsController.html":{},"controllers/ProducersController.html":{}}}],["parameters",{"_index":123,"title":{},"body":{"controllers/AreasController.html":{},"injectables/AreasService.html":{},"injectables/DashboardService.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{},"miscellaneous/functions.html":{}}}],["parseint(process.env.database_port",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["partialtype",{"_index":460,"title":{},"body":{"classes/UpdateAreaDto.html":{},"classes/UpdateDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{}}}],["partialtype(createareadto",{"_index":464,"title":{},"body":{"classes/UpdateAreaDto.html":{}}}],["partialtype(createdashboarddto",{"_index":467,"title":{},"body":{"classes/UpdateDashboardDto.html":{}}}],["partialtype(createfarmdto",{"_index":470,"title":{},"body":{"classes/UpdateFarmDto.html":{}}}],["partialtype(createproducerdto",{"_index":473,"title":{},"body":{"classes/UpdateProducerDto.html":{}}}],["password",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["patch",{"_index":137,"title":{},"body":{"controllers/AreasController.html":{},"controllers/FarmsController.html":{},"controllers/ProducersController.html":{}}}],["patch(':id",{"_index":134,"title":{},"body":{"controllers/AreasController.html":{},"controllers/FarmsController.html":{},"controllers/ProducersController.html":{}}}],["persontype",{"_index":228,"title":{},"body":{"classes/CreateProducerDto.html":{},"entities/Producer.html":{},"classes/documentValidator.html":{},"miscellaneous/enumerations.html":{}}}],["persontype.f",{"_index":410,"title":{},"body":{"entities/Producer.html":{},"classes/documentValidator.html":{}}}],["persontype.j",{"_index":560,"title":{},"body":{"classes/documentValidator.html":{}}}],["pg",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["planting",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/ResponseDashboardDto.html":{},"coverage.html":{}}}],["port",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":121,"title":{},"body":{"controllers/AreasController.html":{},"controllers/FarmsController.html":{},"controllers/ProducersController.html":{}}}],["postgres",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["postgresl",{"_index":635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primary",{"_index":639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primarygeneratedcolumn",{"_index":95,"title":{},"body":{"entities/Area.html":{},"entities/AreaValue.html":{},"entities/Farm.html":{},"entities/Producer.html":{}}}],["primarygeneratedcolumn('increment",{"_index":88,"title":{},"body":{"entities/Area.html":{},"entities/AreaValue.html":{},"entities/Farm.html":{},"entities/Producer.html":{}}}],["private",{"_index":181,"title":{},"body":{"injectables/AreasService.html":{},"injectables/DashboardService.html":{},"injectables/FarmsService.html":{},"injectables/ProducersService.html":{}}}],["process.env.database_host",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.database_name",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.database_password",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.database_username",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["producer",{"_index":50,"title":{"entities/Producer.html":{}},"body":{"modules/AppModule.html":{},"entities/Farm.html":{},"entities/Producer.html":{},"modules/ProducersModule.html":{},"injectables/ProducersService.html":{},"coverage.html":{},"index.html":{}}}],["producer.dto",{"_index":422,"title":{},"body":{"controllers/ProducersController.html":{},"injectables/ProducersService.html":{},"classes/UpdateProducerDto.html":{},"classes/documentValidator.html":{}}}],["producer.dto.ts",{"_index":226,"title":{},"body":{"classes/CreateProducerDto.html":{},"classes/UpdateProducerDto.html":{},"coverage.html":{}}}],["producer.dto.ts:11",{"_index":232,"title":{},"body":{"classes/CreateProducerDto.html":{}}}],["producer.dto.ts:13",{"_index":234,"title":{},"body":{"classes/CreateProducerDto.html":{}}}],["producer.dto.ts:16",{"_index":233,"title":{},"body":{"classes/CreateProducerDto.html":{}}}],["producer.dto.ts:21",{"_index":230,"title":{},"body":{"classes/CreateProducerDto.html":{}}}],["producer.dto.ts:24",{"_index":231,"title":{},"body":{"classes/CreateProducerDto.html":{}}}],["producer.dto.ts:5",{"_index":472,"title":{},"body":{"classes/UpdateProducerDto.html":{}}}],["producerrepository",{"_index":437,"title":{},"body":{"injectables/ProducersService.html":{}}}],["producers",{"_index":328,"title":{},"body":{"entities/Farm.html":{},"injectables/FarmsService.html":{},"controllers/ProducersController.html":{}}}],["producers.controller",{"_index":431,"title":{},"body":{"modules/ProducersModule.html":{}}}],["producers.farms",{"_index":336,"title":{},"body":{"entities/Farm.html":{}}}],["producers.service",{"_index":421,"title":{},"body":{"controllers/ProducersController.html":{},"modules/ProducersModule.html":{}}}],["producers/entities/producer.entity",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"entities/Farm.html":{}}}],["producers/producers.module",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["producerscontroller",{"_index":411,"title":{"controllers/ProducersController.html":{}},"body":{"controllers/ProducersController.html":{},"modules/ProducersModule.html":{},"coverage.html":{}}}],["producersmodule",{"_index":10,"title":{"modules/ProducersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProducersModule.html":{},"modules.html":{},"overview.html":{}}}],["producersservice",{"_index":420,"title":{"injectables/ProducersService.html":{}},"body":{"controllers/ProducersController.html":{},"modules/ProducersModule.html":{},"injectables/ProducersService.html":{},"coverage.html":{},"overview.html":{}}}],["production",{"_index":593,"title":{},"body":{"index.html":{}}}],["properties",{"_index":82,"title":{"properties.html":{}},"body":{"entities/Area.html":{},"entities/AreaValue.html":{},"classes/CreateAreaDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/Dashboard.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{},"entities/Producer.html":{},"classes/ResponseDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{},"properties.html":{}}}],["providers",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AreasModule.html":{},"modules/DashboardModule.html":{},"modules/FarmsModule.html":{},"modules/ProducersModule.html":{}}}],["public",{"_index":327,"title":{},"body":{"entities/Farm.html":{},"entities/Producer.html":{}}}],["readonly",{"_index":149,"title":{},"body":{"controllers/AreasController.html":{},"controllers/DashboardController.html":{},"controllers/FarmsController.html":{},"controllers/ProducersController.html":{}}}],["reduce((sum",{"_index":491,"title":{},"body":{"classes/areasValidator.html":{},"classes/areasValidator-1.html":{}}}],["reflect",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["relations",{"_index":387,"title":{},"body":{"injectables/FarmsService.html":{},"injectables/ProducersService.html":{}}}],["remove",{"_index":117,"title":{},"body":{"controllers/AreasController.html":{},"injectables/AreasService.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{}}}],["remove(@param('id",{"_index":158,"title":{},"body":{"controllers/AreasController.html":{},"controllers/FarmsController.html":{},"controllers/ProducersController.html":{}}}],["remove(id",{"_index":129,"title":{},"body":{"controllers/AreasController.html":{},"injectables/AreasService.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{}}}],["repository",{"_index":171,"title":{},"body":{"injectables/AreasService.html":{},"injectables/DashboardService.html":{},"injectables/FarmsService.html":{},"injectables/ProducersService.html":{},"index.html":{}}}],["res",{"_index":391,"title":{},"body":{"injectables/FarmsService.html":{},"injectables/ProducersService.html":{}}}],["res.affected",{"_index":393,"title":{},"body":{"injectables/FarmsService.html":{},"injectables/ProducersService.html":{}}}],["reset",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AreasModule.html":{},"modules/DashboardModule.html":{},"modules/FarmsModule.html":{},"modules/ProducersModule.html":{},"overview.html":{}}}],["responsedashboard",{"_index":277,"title":{},"body":{"injectables/DashboardService.html":{}}}],["responsedashboard.farms",{"_index":279,"title":{},"body":{"injectables/DashboardService.html":{}}}],["responsedashboard.farmsbyareatype",{"_index":286,"title":{},"body":{"injectables/DashboardService.html":{}}}],["responsedashboard.farmsbyplantingtype",{"_index":284,"title":{},"body":{"injectables/DashboardService.html":{}}}],["responsedashboard.farmsbystate",{"_index":282,"title":{},"body":{"injectables/DashboardService.html":{}}}],["responsedashboarddto",{"_index":269,"title":{"classes/ResponseDashboardDto.html":{}},"body":{"injectables/DashboardService.html":{},"classes/ResponseDashboardDto.html":{},"coverage.html":{}}}],["results",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"entities/Area.html":{},"entities/AreaValue.html":{},"controllers/AreasController.html":{},"modules/AreasModule.html":{},"injectables/AreasService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateDashboardDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/Dashboard.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{},"controllers/FarmsController.html":{},"modules/FarmsModule.html":{},"injectables/FarmsService.html":{},"entities/Producer.html":{},"controllers/ProducersController.html":{},"modules/ProducersModule.html":{},"injectables/ProducersService.html":{},"classes/ResponseDashboardDto.html":{},"classes/UpdateAreaDto.html":{},"classes/UpdateDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"coverage.html":{},"dependencies.html":{},"classes/documentValidator.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":151,"title":{},"body":{"controllers/AreasController.html":{},"injectables/AreasService.html":{},"controllers/DashboardController.html":{},"injectables/DashboardService.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":124,"title":{},"body":{"controllers/AreasController.html":{},"injectables/AreasService.html":{},"controllers/DashboardController.html":{},"injectables/DashboardService.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":588,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["schema",{"_index":642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema.registerfunction",{"_index":643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select(\"count(area.id",{"_index":309,"title":{},"body":{"classes/DashboardTotalFarmsPlantingType.html":{}}}],["select(\"count(farm.id",{"_index":297,"title":{},"body":{"classes/DashboardTotalFarms.html":{}}}],["select(\"count(farm.state",{"_index":323,"title":{},"body":{"classes/DashboardTotalFarmsState.html":{}}}],["select(\"sum(farm.totalarablearea",{"_index":303,"title":{},"body":{"classes/DashboardTotalFarmsAreaType.html":{}}}],["setupdatasource",{"_index":524,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"entities/Area.html":{},"entities/AreaValue.html":{},"controllers/AreasController.html":{},"modules/AreasModule.html":{},"injectables/AreasService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateDashboardDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/Dashboard.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{},"controllers/FarmsController.html":{},"modules/FarmsModule.html":{},"injectables/FarmsService.html":{},"entities/Producer.html":{},"controllers/ProducersController.html":{},"modules/ProducersModule.html":{},"injectables/ProducersService.html":{},"classes/ResponseDashboardDto.html":{},"classes/UpdateAreaDto.html":{},"classes/UpdateDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{}}}],["src/.../document",{"_index":573,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":572,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../ormconfig.ts",{"_index":627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../person",{"_index":564,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":17,"title":{},"body":{"modules/AppModule.html":{}}}],["src/areas/areas.controller.ts",{"_index":112,"title":{},"body":{"controllers/AreasController.html":{},"coverage.html":{}}}],["src/areas/areas.controller.ts:11",{"_index":122,"title":{},"body":{"controllers/AreasController.html":{}}}],["src/areas/areas.controller.ts:16",{"_index":125,"title":{},"body":{"controllers/AreasController.html":{}}}],["src/areas/areas.controller.ts:21",{"_index":128,"title":{},"body":{"controllers/AreasController.html":{}}}],["src/areas/areas.controller.ts:26",{"_index":135,"title":{},"body":{"controllers/AreasController.html":{}}}],["src/areas/areas.controller.ts:31",{"_index":131,"title":{},"body":{"controllers/AreasController.html":{}}}],["src/areas/areas.module.ts",{"_index":162,"title":{},"body":{"modules/AreasModule.html":{}}}],["src/areas/areas.service.ts",{"_index":168,"title":{},"body":{"injectables/AreasService.html":{},"coverage.html":{}}}],["src/areas/areas.service.ts:16",{"_index":174,"title":{},"body":{"injectables/AreasService.html":{}}}],["src/areas/areas.service.ts:20",{"_index":175,"title":{},"body":{"injectables/AreasService.html":{}}}],["src/areas/areas.service.ts:24",{"_index":176,"title":{},"body":{"injectables/AreasService.html":{}}}],["src/areas/areas.service.ts:28",{"_index":178,"title":{},"body":{"injectables/AreasService.html":{}}}],["src/areas/areas.service.ts:32",{"_index":177,"title":{},"body":{"injectables/AreasService.html":{}}}],["src/areas/areas.service.ts:9",{"_index":172,"title":{},"body":{"injectables/AreasService.html":{}}}],["src/areas/dto/create",{"_index":188,"title":{},"body":{"classes/CreateAreaDto.html":{},"coverage.html":{}}}],["src/areas/dto/update",{"_index":459,"title":{},"body":{"classes/UpdateAreaDto.html":{},"coverage.html":{}}}],["src/areas/entities/area.entity.ts",{"_index":80,"title":{},"body":{"entities/Area.html":{},"coverage.html":{}}}],["src/areas/entities/area.entity.ts:6",{"_index":90,"title":{},"body":{"entities/Area.html":{}}}],["src/areas/entities/area.entity.ts:9",{"_index":93,"title":{},"body":{"entities/Area.html":{}}}],["src/dashboard/dashboard.controller.ts",{"_index":251,"title":{},"body":{"controllers/DashboardController.html":{},"coverage.html":{}}}],["src/dashboard/dashboard.controller.ts:10",{"_index":252,"title":{},"body":{"controllers/DashboardController.html":{}}}],["src/dashboard/dashboard.module.ts",{"_index":258,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/dashboard/dashboard.service.ts",{"_index":263,"title":{},"body":{"injectables/DashboardService.html":{},"coverage.html":{}}}],["src/dashboard/dashboard.service.ts:11",{"_index":266,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/dashboard/dashboard.service.ts:28",{"_index":267,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/dashboard/dto/create",{"_index":201,"title":{},"body":{"classes/CreateDashboardDto.html":{},"coverage.html":{}}}],["src/dashboard/dto/response",{"_index":451,"title":{},"body":{"classes/ResponseDashboardDto.html":{},"coverage.html":{}}}],["src/dashboard/dto/update",{"_index":466,"title":{},"body":{"classes/UpdateDashboardDto.html":{},"coverage.html":{}}}],["src/dashboard/entities/dashboard.entity.ts",{"_index":246,"title":{},"body":{"classes/Dashboard.html":{},"coverage.html":{}}}],["src/dashboard/entities/dashboard.entity.ts:7",{"_index":248,"title":{},"body":{"classes/Dashboard.html":{}}}],["src/dashboard/entities/dashboard.total",{"_index":288,"title":{},"body":{"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"coverage.html":{}}}],["src/farms/dto/create",{"_index":204,"title":{},"body":{"classes/CreateFarmDto.html":{},"coverage.html":{}}}],["src/farms/dto/update",{"_index":468,"title":{},"body":{"classes/UpdateFarmDto.html":{},"coverage.html":{}}}],["src/farms/entities/area.value.entity",{"_index":220,"title":{},"body":{"classes/CreateFarmDto.html":{}}}],["src/farms/entities/area.value.entity.ts",{"_index":98,"title":{},"body":{"entities/AreaValue.html":{},"coverage.html":{}}}],["src/farms/entities/area.value.entity.ts:11",{"_index":101,"title":{},"body":{"entities/AreaValue.html":{}}}],["src/farms/entities/area.value.entity.ts:16",{"_index":105,"title":{},"body":{"entities/AreaValue.html":{}}}],["src/farms/entities/area.value.entity.ts:19",{"_index":107,"title":{},"body":{"entities/AreaValue.html":{}}}],["src/farms/entities/area.value.entity.ts:8",{"_index":106,"title":{},"body":{"entities/AreaValue.html":{}}}],["src/farms/entities/farm.entity",{"_index":237,"title":{},"body":{"classes/CreateProducerDto.html":{},"classes/areasValidator-1.html":{}}}],["src/farms/entities/farm.entity.ts",{"_index":326,"title":{},"body":{"entities/Farm.html":{},"coverage.html":{}}}],["src/farms/entities/farm.entity.ts:12",{"_index":334,"title":{},"body":{"entities/Farm.html":{}}}],["src/farms/entities/farm.entity.ts:15",{"_index":342,"title":{},"body":{"entities/Farm.html":{}}}],["src/farms/entities/farm.entity.ts:18",{"_index":341,"title":{},"body":{"entities/Farm.html":{}}}],["src/farms/entities/farm.entity.ts:21",{"_index":343,"title":{},"body":{"entities/Farm.html":{}}}],["src/farms/entities/farm.entity.ts:24",{"_index":332,"title":{},"body":{"entities/Farm.html":{}}}],["src/farms/entities/farm.entity.ts:27",{"_index":338,"title":{},"body":{"entities/Farm.html":{}}}],["src/farms/entities/farm.entity.ts:33",{"_index":331,"title":{},"body":{"entities/Farm.html":{}}}],["src/farms/entities/farm.entity.ts:39",{"_index":337,"title":{},"body":{"entities/Farm.html":{}}}],["src/farms/entities/farm.entity.ts:9",{"_index":333,"title":{},"body":{"entities/Farm.html":{}}}],["src/farms/farms.controller.ts",{"_index":349,"title":{},"body":{"controllers/FarmsController.html":{},"coverage.html":{}}}],["src/farms/farms.controller.ts:11",{"_index":351,"title":{},"body":{"controllers/FarmsController.html":{}}}],["src/farms/farms.controller.ts:16",{"_index":352,"title":{},"body":{"controllers/FarmsController.html":{}}}],["src/farms/farms.controller.ts:21",{"_index":353,"title":{},"body":{"controllers/FarmsController.html":{}}}],["src/farms/farms.controller.ts:26",{"_index":356,"title":{},"body":{"controllers/FarmsController.html":{}}}],["src/farms/farms.controller.ts:31",{"_index":354,"title":{},"body":{"controllers/FarmsController.html":{}}}],["src/farms/farms.module.ts",{"_index":367,"title":{},"body":{"modules/FarmsModule.html":{}}}],["src/farms/farms.service.ts",{"_index":372,"title":{},"body":{"injectables/FarmsService.html":{},"coverage.html":{}}}],["src/farms/farms.service.ts:10",{"_index":375,"title":{},"body":{"injectables/FarmsService.html":{}}}],["src/farms/farms.service.ts:19",{"_index":377,"title":{},"body":{"injectables/FarmsService.html":{}}}],["src/farms/farms.service.ts:23",{"_index":378,"title":{},"body":{"injectables/FarmsService.html":{}}}],["src/farms/farms.service.ts:29",{"_index":379,"title":{},"body":{"injectables/FarmsService.html":{}}}],["src/farms/farms.service.ts:38",{"_index":381,"title":{},"body":{"injectables/FarmsService.html":{}}}],["src/farms/farms.service.ts:53",{"_index":380,"title":{},"body":{"injectables/FarmsService.html":{}}}],["src/farms/validators/areas.ts",{"_index":474,"title":{},"body":{"classes/areasValidator.html":{},"coverage.html":{}}}],["src/farms/validators/areas.ts:12",{"_index":482,"title":{},"body":{"classes/areasValidator.html":{}}}],["src/farms/validators/areas.ts:29",{"_index":478,"title":{},"body":{"classes/areasValidator.html":{}}}],["src/main.ts",{"_index":519,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/ormconfig.ts",{"_index":522,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/producers/dto/create",{"_index":225,"title":{},"body":{"classes/CreateProducerDto.html":{},"coverage.html":{}}}],["src/producers/dto/update",{"_index":471,"title":{},"body":{"classes/UpdateProducerDto.html":{},"coverage.html":{}}}],["src/producers/entities/producer.entity.ts",{"_index":398,"title":{},"body":{"entities/Producer.html":{},"coverage.html":{}}}],["src/producers/entities/producer.entity.ts:10",{"_index":403,"title":{},"body":{"entities/Producer.html":{}}}],["src/producers/entities/producer.entity.ts:17",{"_index":408,"title":{},"body":{"entities/Producer.html":{}}}],["src/producers/entities/producer.entity.ts:20",{"_index":404,"title":{},"body":{"entities/Producer.html":{}}}],["src/producers/entities/producer.entity.ts:23",{"_index":399,"title":{},"body":{"entities/Producer.html":{}}}],["src/producers/entities/producer.entity.ts:29",{"_index":402,"title":{},"body":{"entities/Producer.html":{}}}],["src/producers/enums/person",{"_index":566,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/producers/producers.controller.ts",{"_index":412,"title":{},"body":{"controllers/ProducersController.html":{},"coverage.html":{}}}],["src/producers/producers.controller.ts:11",{"_index":414,"title":{},"body":{"controllers/ProducersController.html":{}}}],["src/producers/producers.controller.ts:16",{"_index":415,"title":{},"body":{"controllers/ProducersController.html":{}}}],["src/producers/producers.controller.ts:21",{"_index":416,"title":{},"body":{"controllers/ProducersController.html":{}}}],["src/producers/producers.controller.ts:26",{"_index":419,"title":{},"body":{"controllers/ProducersController.html":{}}}],["src/producers/producers.controller.ts:31",{"_index":417,"title":{},"body":{"controllers/ProducersController.html":{}}}],["src/producers/producers.module.ts",{"_index":430,"title":{},"body":{"modules/ProducersModule.html":{}}}],["src/producers/producers.service.ts",{"_index":434,"title":{},"body":{"injectables/ProducersService.html":{},"coverage.html":{}}}],["src/producers/producers.service.ts:16",{"_index":439,"title":{},"body":{"injectables/ProducersService.html":{}}}],["src/producers/producers.service.ts:20",{"_index":440,"title":{},"body":{"injectables/ProducersService.html":{}}}],["src/producers/producers.service.ts:26",{"_index":441,"title":{},"body":{"injectables/ProducersService.html":{}}}],["src/producers/producers.service.ts:35",{"_index":443,"title":{},"body":{"injectables/ProducersService.html":{}}}],["src/producers/producers.service.ts:51",{"_index":442,"title":{},"body":{"injectables/ProducersService.html":{}}}],["src/producers/producers.service.ts:9",{"_index":436,"title":{},"body":{"injectables/ProducersService.html":{}}}],["src/producers/utils/document",{"_index":525,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/producers/validators/areas.ts",{"_index":494,"title":{},"body":{"classes/areasValidator-1.html":{},"coverage.html":{}}}],["src/producers/validators/areas.ts:11",{"_index":497,"title":{},"body":{"classes/areasValidator-1.html":{}}}],["src/producers/validators/areas.ts:27",{"_index":495,"title":{},"body":{"classes/areasValidator-1.html":{}}}],["src/producers/validators/document.ts",{"_index":527,"title":{},"body":{"coverage.html":{},"classes/documentValidator.html":{}}}],["src/producers/validators/document.ts:13",{"_index":556,"title":{},"body":{"classes/documentValidator.html":{}}}],["src/producers/validators/document.ts:29",{"_index":554,"title":{},"body":{"classes/documentValidator.html":{}}}],["start",{"_index":589,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":592,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":594,"title":{},"body":{"index.html":{}}}],["started",{"_index":576,"title":{"index.html":{}},"body":{}}],["starter",{"_index":604,"title":{},"body":{"index.html":{}}}],["state",{"_index":207,"title":{},"body":{"classes/CreateFarmDto.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{}}}],["state.entity",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/ResponseDashboardDto.html":{}}}],["state.entity.ts",{"_index":319,"title":{},"body":{"classes/DashboardTotalFarmsState.html":{},"coverage.html":{}}}],["state.entity.ts:19",{"_index":320,"title":{},"body":{"classes/DashboardTotalFarmsState.html":{}}}],["state.entity.ts:22",{"_index":322,"title":{},"body":{"classes/DashboardTotalFarmsState.html":{}}}],["state.entity.ts:25",{"_index":321,"title":{},"body":{"classes/DashboardTotalFarmsState.html":{}}}],["statements",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":91,"title":{},"body":{"entities/Area.html":{},"controllers/AreasController.html":{},"classes/CreateAreaDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{},"controllers/FarmsController.html":{},"entities/Producer.html":{},"controllers/ProducersController.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{},"miscellaneous/functions.html":{}}}],["sum",{"_index":487,"title":{},"body":{"classes/areasValidator.html":{},"classes/areasValidator-1.html":{}}}],["support",{"_index":614,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":615,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["system",{"_index":582,"title":{},"body":{"index.html":{}}}],["table",{"_index":199,"title":{},"body":{"classes/CreateAreaDto.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":579,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test:cov",{"_index":599,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":598,"title":{},"body":{"index.html":{}}}],["tests",{"_index":596,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":605,"title":{},"body":{"index.html":{}}}],["this.arearepository.delete(id",{"_index":186,"title":{},"body":{"injectables/AreasService.html":{}}}],["this.arearepository.find",{"_index":183,"title":{},"body":{"injectables/AreasService.html":{}}}],["this.arearepository.findoneby({id",{"_index":184,"title":{},"body":{"injectables/AreasService.html":{}}}],["this.arearepository.save(createareadto",{"_index":182,"title":{},"body":{"injectables/AreasService.html":{}}}],["this.arearepository.update(id",{"_index":185,"title":{},"body":{"injectables/AreasService.html":{}}}],["this.areasservice.create(createareadto",{"_index":152,"title":{},"body":{"controllers/AreasController.html":{}}}],["this.areasservice.findall",{"_index":153,"title":{},"body":{"controllers/AreasController.html":{}}}],["this.areasservice.findone(+id",{"_index":155,"title":{},"body":{"controllers/AreasController.html":{}}}],["this.areasservice.remove(+id",{"_index":159,"title":{},"body":{"controllers/AreasController.html":{}}}],["this.areasservice.update(+id",{"_index":157,"title":{},"body":{"controllers/AreasController.html":{}}}],["this.dashboardservice.findall",{"_index":255,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.dashboardtotalfarms.findoneby",{"_index":281,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.dashboardtotalfarmsareatype.findoneby",{"_index":287,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.dashboardtotalfarmsplantingtype.find",{"_index":285,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.dashboardtotalfarmsstate.find",{"_index":283,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.farmrepository.delete(id",{"_index":397,"title":{},"body":{"injectables/FarmsService.html":{}}}],["this.farmrepository.find",{"_index":386,"title":{},"body":{"injectables/FarmsService.html":{}}}],["this.farmrepository.findone",{"_index":389,"title":{},"body":{"injectables/FarmsService.html":{}}}],["this.farmrepository.save(createfarmdto",{"_index":385,"title":{},"body":{"injectables/FarmsService.html":{}}}],["this.farmrepository.save(updatefarmdto",{"_index":395,"title":{},"body":{"injectables/FarmsService.html":{}}}],["this.farmsservice.create(createfarmdto",{"_index":360,"title":{},"body":{"controllers/FarmsController.html":{}}}],["this.farmsservice.findall",{"_index":361,"title":{},"body":{"controllers/FarmsController.html":{}}}],["this.farmsservice.findone(+id",{"_index":362,"title":{},"body":{"controllers/FarmsController.html":{}}}],["this.farmsservice.remove(+id",{"_index":364,"title":{},"body":{"controllers/FarmsController.html":{}}}],["this.farmsservice.update(+id",{"_index":363,"title":{},"body":{"controllers/FarmsController.html":{}}}],["this.findone(id",{"_index":392,"title":{},"body":{"injectables/FarmsService.html":{},"injectables/ProducersService.html":{}}}],["this.producerrepository.delete(id",{"_index":450,"title":{},"body":{"injectables/ProducersService.html":{}}}],["this.producerrepository.find",{"_index":446,"title":{},"body":{"injectables/ProducersService.html":{}}}],["this.producerrepository.findone",{"_index":448,"title":{},"body":{"injectables/ProducersService.html":{}}}],["this.producerrepository.save(updateproducerdto",{"_index":445,"title":{},"body":{"injectables/ProducersService.html":{}}}],["this.producersservice.create(createproducerdto",{"_index":423,"title":{},"body":{"controllers/ProducersController.html":{}}}],["this.producersservice.findall",{"_index":424,"title":{},"body":{"controllers/ProducersController.html":{}}}],["this.producersservice.findone(+id",{"_index":425,"title":{},"body":{"controllers/ProducersController.html":{}}}],["this.producersservice.remove(+id",{"_index":427,"title":{},"body":{"controllers/ProducersController.html":{}}}],["this.producersservice.update(+id",{"_index":426,"title":{},"body":{"controllers/ProducersController.html":{}}}],["total",{"_index":305,"title":{},"body":{"classes/DashboardTotalFarmsPlantingType.html":{},"classes/areasValidator-1.html":{}}}],["totalarablearea",{"_index":208,"title":{},"body":{"classes/CreateFarmDto.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"entities/Farm.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{}}}],["totalarea",{"_index":209,"title":{},"body":{"classes/CreateFarmDto.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{},"classes/areasValidator.html":{}}}],["totalfarms",{"_index":247,"title":{},"body":{"classes/Dashboard.html":{},"classes/DashboardTotalFarms.html":{}}}],["totalvegetationarea",{"_index":210,"title":{},"body":{"classes/CreateFarmDto.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"entities/Farm.html":{}}}],["transform",{"_index":235,"title":{},"body":{"classes/CreateProducerDto.html":{}}}],["transform.ts",{"_index":526,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["transformer",{"_index":236,"title":{},"body":{"classes/CreateProducerDto.html":{},"dependencies.html":{}}}],["true",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"entities/Area.html":{},"entities/Farm.html":{},"entities/Producer.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{},"miscellaneous/variables.html":{}}}],["true})@jointable",{"_index":401,"title":{},"body":{"entities/Producer.html":{}}}],["type",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"entities/Area.html":{},"entities/AreaValue.html":{},"controllers/AreasController.html":{},"injectables/AreasService.html":{},"classes/CreateAreaDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/Dashboard.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"entities/Producer.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{},"classes/ResponseDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"coverage.html":{},"classes/documentValidator.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type.entity",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/ResponseDashboardDto.html":{}}}],["type.entity.ts",{"_index":300,"title":{},"body":{"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"coverage.html":{}}}],["type.entity.ts:17",{"_index":301,"title":{},"body":{"classes/DashboardTotalFarmsAreaType.html":{}}}],["type.entity.ts:20",{"_index":302,"title":{},"body":{"classes/DashboardTotalFarmsAreaType.html":{}}}],["type.entity.ts:23",{"_index":307,"title":{},"body":{"classes/DashboardTotalFarmsPlantingType.html":{}}}],["type.entity.ts:26",{"_index":308,"title":{},"body":{"classes/DashboardTotalFarmsPlantingType.html":{}}}],["type.entity.ts:29",{"_index":306,"title":{},"body":{"classes/DashboardTotalFarmsPlantingType.html":{}}}],["type.enum",{"_index":239,"title":{},"body":{"classes/CreateProducerDto.html":{},"entities/Producer.html":{},"classes/documentValidator.html":{}}}],["type.enum.ts",{"_index":565,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeorm",{"_index":96,"title":{},"body":{"entities/Area.html":{},"entities/AreaValue.html":{},"injectables/AreasService.html":{},"classes/Dashboard.html":{},"injectables/DashboardService.html":{},"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{},"entities/Farm.html":{},"injectables/FarmsService.html":{},"entities/Producer.html":{},"injectables/ProducersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AreasModule.html":{},"modules/DashboardModule.html":{},"modules/FarmsModule.html":{},"modules/ProducersModule.html":{}}}],["typeormmodule.forfeature",{"_index":262,"title":{},"body":{"modules/DashboardModule.html":{}}}],["typeormmodule.forfeature([area",{"_index":165,"title":{},"body":{"modules/AreasModule.html":{}}}],["typeormmodule.forfeature([farm",{"_index":371,"title":{},"body":{"modules/FarmsModule.html":{}}}],["typeormmodule.forfeature([producer",{"_index":433,"title":{},"body":{"modules/ProducersModule.html":{}}}],["typeormmodule.forroot",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":462,"title":{},"body":{"classes/UpdateAreaDto.html":{},"classes/UpdateDashboardDto.html":{},"classes/UpdateFarmDto.html":{},"classes/UpdateProducerDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":603,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":192,"title":{},"body":{"classes/CreateAreaDto.html":{},"entities/Producer.html":{}}}],["unique",{"_index":97,"title":{},"body":{"entities/Area.html":{}}}],["unit",{"_index":595,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":268,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/FarmsService.html":{},"injectables/ProducersService.html":{}}}],["unlicensed",{"_index":624,"title":{},"body":{"properties.html":{}}}],["update",{"_index":118,"title":{},"body":{"controllers/AreasController.html":{},"injectables/AreasService.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{}}}],["update(@param('id",{"_index":156,"title":{},"body":{"controllers/AreasController.html":{},"controllers/FarmsController.html":{},"controllers/ProducersController.html":{}}}],["update(id",{"_index":132,"title":{},"body":{"controllers/AreasController.html":{},"injectables/AreasService.html":{},"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"controllers/ProducersController.html":{},"injectables/ProducersService.html":{}}}],["updateareadto",{"_index":133,"title":{"classes/UpdateAreaDto.html":{}},"body":{"controllers/AreasController.html":{},"injectables/AreasService.html":{},"classes/UpdateAreaDto.html":{},"coverage.html":{}}}],["updatedashboarddto",{"_index":465,"title":{"classes/UpdateDashboardDto.html":{}},"body":{"classes/UpdateDashboardDto.html":{},"coverage.html":{}}}],["updatefarmdto",{"_index":355,"title":{"classes/UpdateFarmDto.html":{}},"body":{"controllers/FarmsController.html":{},"injectables/FarmsService.html":{},"classes/UpdateFarmDto.html":{},"coverage.html":{}}}],["updatefarmdto.id",{"_index":394,"title":{},"body":{"injectables/FarmsService.html":{}}}],["updateproducerdto",{"_index":418,"title":{"classes/UpdateProducerDto.html":{}},"body":{"controllers/ProducersController.html":{},"injectables/ProducersService.html":{},"classes/UpdateProducerDto.html":{},"coverage.html":{}}}],["updateproducerdto.id",{"_index":449,"title":{},"body":{"injectables/ProducersService.html":{}}}],["updateresult",{"_index":382,"title":{},"body":{"injectables/FarmsService.html":{},"injectables/ProducersService.html":{}}}],["use",{"_index":638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["username",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/document",{"_index":241,"title":{},"body":{"classes/CreateProducerDto.html":{}}}],["uuid",{"_index":553,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["uuid_generate_v4",{"_index":644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v4",{"_index":646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":196,"title":{},"body":{"classes/CreateAreaDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{}}}],["validate(areasvalidator",{"_index":223,"title":{},"body":{"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{}}}],["validate(document",{"_index":555,"title":{},"body":{"classes/documentValidator.html":{}}}],["validate(documentvalidator",{"_index":244,"title":{},"body":{"classes/CreateProducerDto.html":{}}}],["validate(farms",{"_index":496,"title":{},"body":{"classes/areasValidator-1.html":{}}}],["validate(isunique",{"_index":198,"title":{},"body":{"classes/CreateAreaDto.html":{}}}],["validate(totalarea",{"_index":479,"title":{},"body":{"classes/areasValidator.html":{}}}],["validationarguments",{"_index":481,"title":{},"body":{"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{}}}],["validator",{"_index":197,"title":{},"body":{"classes/CreateAreaDto.html":{},"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{},"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"dependencies.html":{},"classes/documentValidator.html":{}}}],["validatorconstraint",{"_index":484,"title":{},"body":{"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{}}}],["validatorconstraintinterface",{"_index":476,"title":{},"body":{"classes/areasValidator.html":{},"classes/areasValidator-1.html":{},"classes/documentValidator.html":{}}}],["validators/areas",{"_index":222,"title":{},"body":{"classes/CreateFarmDto.html":{},"classes/CreateProducerDto.html":{}}}],["validators/document",{"_index":243,"title":{},"body":{"classes/CreateProducerDto.html":{}}}],["value",{"_index":99,"title":{},"body":{"entities/AreaValue.html":{},"classes/CreateProducerDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":626,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vegetation",{"_index":505,"title":{},"body":{"classes/areasValidator-1.html":{}}}],["version",{"_index":621,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["version:'1",{"_index":147,"title":{},"body":{"controllers/AreasController.html":{},"controllers/DashboardController.html":{},"controllers/FarmsController.html":{},"controllers/ProducersController.html":{}}}],["viewcolumn",{"_index":290,"title":{},"body":{"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{}}}],["viewentity",{"_index":293,"title":{},"body":{"classes/DashboardTotalFarms.html":{},"classes/DashboardTotalFarmsAreaType.html":{},"classes/DashboardTotalFarmsPlantingType.html":{},"classes/DashboardTotalFarmsState.html":{}}}],["watch",{"_index":590,"title":{},"body":{"index.html":{}}}],["work",{"_index":608,"title":{},"body":{"index.html":{}}}],["youba/nestjs",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateAreaDto.html":{},"dependencies.html":{}}}],["zoom",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/AreasModule.html":{},"modules/DashboardModule.html":{},"modules/FarmsModule.html":{},"modules/ProducersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAreasModule\n\nAreasModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAreasModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nFarmsModule\n\nFarmsModule\n\nAppModule -->\n\nFarmsModule->AppModule\n\n\n\n\n\nProducersModule\n\nProducersModule\n\nAppModule -->\n\nProducersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AreasModule\n                        \n                        \n                            DashboardModule\n                        \n                        \n                            FarmsModule\n                        \n                        \n                            ProducersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { FarmsModule } from './farms/farms.module';\nimport { ProducersModule } from './producers/producers.module';\nimport { AreasModule } from './areas/areas.module';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { DbValidatorsModule } from '@youba/nestjs-dbvalidator';\nimport { ConfigModule } from '@nestjs/config';\nimport { Area } from './areas/entities/area.entity';\nimport { Dashboard } from './dashboard/entities/dashboard.entity';\nimport { DashboardTotalFarmsAreaType } from './dashboard/entities/dashboard.total-farms-area-type.entity';\nimport { DashboardTotalFarmsPlantingType } from './dashboard/entities/dashboard.total-farms-planting-type.entity';\nimport { DashboardTotalFarmsState } from './dashboard/entities/dashboard.total-farms-state.entity';\nimport { DashboardTotalFarms } from './dashboard/entities/dashboard.total-farms.entity';\nimport { AreaValue } from './farms/entities/area.value.entity';\nimport { Farm } from './farms/entities/farm.entity';\nimport { Producer } from './producers/entities/producer.entity';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      ignoreEnvFile: false\n    }),\n    TypeOrmModule.forRoot({\n      type: \"postgres\",\n      host: process.env.DATABASE_HOST,\n      port: parseInt(process.env.DATABASE_PORT),\n      username: process.env.DATABASE_USERNAME,\n      password: process.env.DATABASE_PASSWORD,\n      database: process.env.DATABASE_NAME,\n      synchronize: true,\n      logging: false,\n      entities: [\n          Producer,\n          Farm,\n          Area,\n          AreaValue,\n          Dashboard,\n          DashboardTotalFarms,\n          DashboardTotalFarmsState,\n          DashboardTotalFarmsPlantingType,\n          DashboardTotalFarmsAreaType\n      ]\n    }),\n    DbValidatorsModule.register({\n      type: \"postgres\",\n      host: process.env.DATABASE_HOST,\n      port: parseInt(process.env.DATABASE_PORT),\n      username: process.env.DATABASE_USERNAME,\n      password: process.env.DATABASE_PASSWORD,\n      database: process.env.DATABASE_NAME,\n  }),\n    FarmsModule, \n    ProducersModule, \n    AreasModule, \n    DashboardModule\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Area.html":{"url":"entities/Area.html","title":"entity - Area","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Area\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/areas/entities/area.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('increment')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/areas/entities/area.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/areas/entities/area.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Area {\n    @PrimaryGeneratedColumn('increment')\n    id: number;\n    \n    @Column({ unique: true })\n    name?: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AreaValue.html":{"url":"entities/AreaValue.html","title":"entity - AreaValue","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AreaValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/farms/entities/area.value.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                area\n                            \n                            \n                                    Optional\n                                farm\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, area => area)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/farms/entities/area.value.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        farm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Farm\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, farm => farm.areas, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/farms/entities/area.value.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('increment')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/farms/entities/area.value.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/farms/entities/area.value.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Farm } from './farm.entity';\nimport { Column, Entity,  ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Area } from '../../areas/entities/area.entity';\n\n@Entity()\nexport class AreaValue {\n    @PrimaryGeneratedColumn('increment')\n    id?: number;\n\n    @ManyToOne(() => Area, (area: Area) => area)\n    area: Area;\n\n    @ManyToOne(() => Farm, (farm: Farm) => farm.areas,{\n        onDelete: 'CASCADE',\n    })\n    farm?: Farm;\n\n    @Column()\n    value: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AreasController.html":{"url":"controllers/AreasController.html","title":"controller - AreasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AreasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/areas/areas.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAreaDto: CreateAreaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/areas/areas.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAreaDto\n                                    \n                                                CreateAreaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/areas/areas.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/areas/areas.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/areas/areas.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateAreaDto: UpdateAreaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/areas/areas.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAreaDto\n                                    \n                                                UpdateAreaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { AreasService } from './areas.service';\nimport { CreateAreaDto } from './dto/create-area.dto';\nimport { UpdateAreaDto } from './dto/update-area.dto';\n\n@Controller({path: 'areas', version:'1'})\nexport class AreasController {\n  constructor(private readonly areasService: AreasService) {}\n\n  @Post()\n  create(@Body() createAreaDto: CreateAreaDto) {\n    return this.areasService.create(createAreaDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.areasService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.areasService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateAreaDto: UpdateAreaDto) {\n    return this.areasService.update(+id, updateAreaDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.areasService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AreasModule.html":{"url":"modules/AreasModule.html","title":"module - AreasModule","body":"\n                   \n\n\n\n\n    Modules\n    AreasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AreasModule\n\n\n\ncluster_AreasModule_providers\n\n\n\n\nAreasService\n\nAreasService\n\n\n\nAreasModule\n\nAreasModule\n\nAreasModule -->\n\nAreasService->AreasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/areas/areas.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AreasService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AreasController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AreasService } from './areas.service';\nimport { AreasController } from './areas.controller';\nimport { Area } from './entities/area.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Area])],\n  controllers: [AreasController],\n  providers: [AreasService]\n})\nexport class AreasModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreasService.html":{"url":"injectables/AreasService.html","title":"injectable - AreasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/areas/areas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/areas/areas.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAreaDto: CreateAreaDto)\n                \n            \n\n\n            \n                \n                    Defined in src/areas/areas.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAreaDto\n                                    \n                                                CreateAreaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/areas/areas.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/areas/areas.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/areas/areas.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateAreaDto: UpdateAreaDto)\n                \n            \n\n\n            \n                \n                    Defined in src/areas/areas.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAreaDto\n                                    \n                                                UpdateAreaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateAreaDto } from './dto/create-area.dto';\nimport { UpdateAreaDto } from './dto/update-area.dto';\nimport { Area } from './entities/area.entity';\n\n@Injectable()\nexport class AreasService {\n  \n  constructor(\n    @InjectRepository(Area)\n    private areaRepository: Repository,\n  ) {}\n\n  create(createAreaDto: CreateAreaDto) {\n    return this.areaRepository.save(createAreaDto);\n  }\n\n  findAll() {\n    return this.areaRepository.find();\n  }\n\n  findOne(id: number) {\n    return this.areaRepository.findOneBy({id: id});\n  }\n\n  update(id: number, updateAreaDto: UpdateAreaDto) {\n    return this.areaRepository.update(id, updateAreaDto);\n  }\n\n  remove(id: number) {\n    return this.areaRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAreaDto.html":{"url":"classes/CreateAreaDto.html","title":"class - CreateAreaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAreaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/areas/dto/create-area.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/areas/dto/create-area.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Validate(IsUnique, ['undefined'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/areas/dto/create-area.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsUnique } from \"@youba/nestjs-dbvalidator\";\nimport { IsNotEmpty, Validate } from \"class-validator\";\n\nexport class CreateAreaDto {\n    @IsNotEmpty()\n    @Validate(IsUnique,[ { table: \"area\", column: \"name\" }])\n    name: string;\n\n    id?: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDashboardDto.html":{"url":"classes/CreateDashboardDto.html","title":"class - CreateDashboardDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDashboardDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/dto/create-dashboard.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateDashboardDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFarmDto.html":{"url":"classes/CreateFarmDto.html","title":"class - CreateFarmDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFarmDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/farms/dto/create-farm.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                areas\n                            \n                            \n                                city\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                            \n                                state\n                            \n                            \n                                    Optional\n                                totalArableArea\n                            \n                            \n                                totalArea\n                            \n                            \n                                totalVegetationArea\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        areas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AreaValue[]\n\n                    \n                \n                    \n                        \n                                Defined in src/farms/dto/create-farm.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/farms/dto/create-farm.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/farms/dto/create-farm.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/farms/dto/create-farm.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/farms/dto/create-farm.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        totalArableArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/farms/dto/create-farm.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Validate(areasValidator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/farms/dto/create-farm.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalVegetationArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/farms/dto/create-farm.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, Validate } from \"class-validator\";\nimport { AreaValue } from \"src/farms/entities/area.value.entity\";\nimport { areasValidator } from \"../validators/areas\";\n\nexport class CreateFarmDto {\n    id?: number;\n    \n    @IsNotEmpty()\n    name: string;\n    \n    @IsNotEmpty()\n    city: string;\n\n    @IsNotEmpty()\n    state: string;\n\n    @IsNotEmpty()\n    @Validate(areasValidator)\n    totalArea: number;\n    \n    totalArableArea?: number;\n\n    @IsNotEmpty()\n    totalVegetationArea: number;\n\n    areas?: AreaValue[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProducerDto.html":{"url":"classes/CreateProducerDto.html","title":"class - CreateProducerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProducerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/producers/dto/create-producer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                            \n                                farms\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                personType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Validate(documentValidator)@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/producers/dto/create-producer.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        farms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Farm[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(areasValidator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/producers/dto/create-producer.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/producers/dto/create-producer.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/producers/dto/create-producer.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        personType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PersonType\n\n                    \n                \n                    \n                        \n                                Defined in src/producers/dto/create-producer.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform } from \"class-transformer\";\nimport { IsNotEmpty, Validate } from \"class-validator\";\nimport { Farm } from \"src/farms/entities/farm.entity\";\n\nimport PersonType from \"../enums/person-type.enum\";\nimport documentTransform from \"../utils/document-transform\";\nimport { areasValidator } from \"../validators/areas\";\nimport { documentValidator } from \"../validators/document\";\n\nexport class CreateProducerDto {\n    id?: number;\n    \n    personType?: PersonType;\n\n    @IsNotEmpty()\n    name: string;\n\n    @IsNotEmpty()\n    @Validate(documentValidator)\n    @Transform(({ value }) => documentTransform(value))\n    document: string;\n    \n    @Validate(areasValidator)\n    farms: Farm[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Dashboard.html":{"url":"classes/Dashboard.html","title":"class - Dashboard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Dashboard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/entities/dashboard.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                totalFarms\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        totalFarms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DashboardTotalFarms\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dashboard/entities/dashboard.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column } from \"typeorm\"\nimport { DashboardTotalFarms } from \"./dashboard.total-farms.entity\";\n\n\nexport class Dashboard {\n    @Column()\n    totalFarms: DashboardTotalFarms;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DashboardController.html":{"url":"controllers/DashboardController.html","title":"controller - DashboardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DashboardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/dashboard.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/dashboard/dashboard.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { DashboardService } from './dashboard.service';\n\n\n@Controller({path: 'dashboard', version:'1'})\nexport class DashboardController {\n  constructor(private readonly dashboardService: DashboardService) {}\n\n  @Get()\n  findAll() {    \n    return this.dashboardService.findAll();\n  }\n \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_providers\n\n\n\n\nDashboardService\n\nDashboardService\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardService->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/dashboard/dashboard.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DashboardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DashboardController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DashboardService } from './dashboard.service';\nimport { DashboardController } from './dashboard.controller';\nimport { Dashboard } from './entities/dashboard.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DashboardTotalFarms } from './entities/dashboard.total-farms.entity';\nimport { DashboardTotalFarmsState } from './entities/dashboard.total-farms-state.entity';\nimport { DashboardTotalFarmsPlantingType } from './entities/dashboard.total-farms-planting-type.entity';\nimport { DashboardTotalFarmsAreaType } from './entities/dashboard.total-farms-area-type.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([\n    Dashboard,\n    DashboardTotalFarms, \n    DashboardTotalFarmsState,\n    DashboardTotalFarmsPlantingType,\n    DashboardTotalFarmsAreaType\n  ])],\n  controllers: [DashboardController],\n  providers: [DashboardService]\n})\nexport class DashboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardService.html":{"url":"injectables/DashboardService.html","title":"injectable - DashboardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DashboardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/dashboard.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dashboardTotalFarms: Repository, dashboardTotalFarmsState: Repository, dashboardTotalFarmsPlantingType: Repository, dashboardTotalFarmsAreaType: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/dashboard.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dashboardTotalFarms\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dashboardTotalFarmsState\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dashboardTotalFarmsPlantingType\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dashboardTotalFarmsAreaType\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/dashboard/dashboard.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { ResponseDashboardDto } from './dto/response-dashboard.dto';\nimport { DashboardTotalFarmsAreaType } from './entities/dashboard.total-farms-area-type.entity';\nimport { DashboardTotalFarmsPlantingType } from './entities/dashboard.total-farms-planting-type.entity';\nimport { DashboardTotalFarmsState } from './entities/dashboard.total-farms-state.entity';\nimport { DashboardTotalFarms } from './entities/dashboard.total-farms.entity';\n\n@Injectable()\nexport class DashboardService {\n\n  constructor(\n    @InjectRepository(DashboardTotalFarms)\n    private dashboardTotalFarms: Repository,\n\n    @InjectRepository(DashboardTotalFarmsState)\n    private dashboardTotalFarmsState: Repository,\n\n    @InjectRepository(DashboardTotalFarmsPlantingType)\n    private dashboardTotalFarmsPlantingType: Repository,\n\n    @InjectRepository(DashboardTotalFarmsAreaType)\n    private dashboardTotalFarmsAreaType: Repository\n  ) {}\n \n\n  async findAll() {\n    const responseDashboard = new ResponseDashboardDto();\n    responseDashboard.farms  = await this.dashboardTotalFarms.findOneBy({});\n    responseDashboard.farmsByState  = await this.dashboardTotalFarmsState.find();\n    responseDashboard.farmsByPlantingType  = await this.dashboardTotalFarmsPlantingType.find();\n    responseDashboard.farmsByAreaType = await this.dashboardTotalFarmsAreaType.findOneBy({});\n    return responseDashboard;\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardTotalFarms.html":{"url":"classes/DashboardTotalFarms.html","title":"class - DashboardTotalFarms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardTotalFarms\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/entities/dashboard.total-farms.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                totalArea\n                            \n                            \n                                totalFarms\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        totalArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dashboard/entities/dashboard.total-farms.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalFarms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dashboard/entities/dashboard.total-farms.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Farm } from \"../../farms/entities/farm.entity\";\nimport { ViewEntity, ViewColumn, DataSource } from \"typeorm\"\n\n@ViewEntity({\n    expression: (dataSource: DataSource) =>\n        dataSource\n            .createQueryBuilder()\n            .select(\"COUNT(farm.id)\", \"totalFarms\")\n            .addSelect(\"SUM(farm.totalArea)\", \"totalArea\")\n            .from(Farm, \"farm\")\n\n})\n\nexport class DashboardTotalFarms { \n\n    @ViewColumn()\n    totalFarms: number;\n\n    @ViewColumn()\n    totalArea: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardTotalFarmsAreaType.html":{"url":"classes/DashboardTotalFarmsAreaType.html","title":"class - DashboardTotalFarmsAreaType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardTotalFarmsAreaType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/entities/dashboard.total-farms-area-type.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                totalArableArea\n                            \n                            \n                                totalVegetationArea\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        totalArableArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dashboard/entities/dashboard.total-farms-area-type.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalVegetationArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dashboard/entities/dashboard.total-farms-area-type.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Farm } from \"../../farms/entities/farm.entity\";\nimport { ViewEntity, ViewColumn, DataSource } from \"typeorm\"\n\n@ViewEntity({\n    expression: (dataSource: DataSource) =>\n        dataSource\n            .createQueryBuilder()\n            .select(\"SUM(farm.totalArableArea)\", \"totalArableArea\")\n            .addSelect(\"SUM(farm.totalVegetationArea)\", \"totalVegetationArea\")\n            .from(Farm, \"farm\")\n\n})\n\nexport class DashboardTotalFarmsAreaType { \n\n    @ViewColumn()\n    totalArableArea: number;\n    \n    @ViewColumn()\n    totalVegetationArea: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardTotalFarmsPlantingType.html":{"url":"classes/DashboardTotalFarmsPlantingType.html","title":"class - DashboardTotalFarmsPlantingType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardTotalFarmsPlantingType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/entities/dashboard.total-farms-planting-type.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                area\n                            \n                            \n                                total\n                            \n                            \n                                totalArea\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dashboard/entities/dashboard.total-farms-planting-type.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dashboard/entities/dashboard.total-farms-planting-type.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dashboard/entities/dashboard.total-farms-planting-type.entity.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Area } from \"../../areas/entities/area.entity\";\nimport { AreaValue } from \"../../farms/entities/area.value.entity\";\nimport { Farm } from \"../../farms/entities/farm.entity\";\nimport { ViewEntity, ViewColumn, DataSource } from \"typeorm\"\n\n@ViewEntity({\n    expression: (dataSource: DataSource) =>\n        dataSource\n            .createQueryBuilder()\n            .select(\"COUNT(area.id)\", \"total\")\n            .addSelect(\"SUM(areaValue.value)\", \"totalArea\")\n            .addSelect(\"area.name\", \"area\")\n            .from(Farm, \"farm\")\n            .innerJoin(AreaValue,\"areaValue\", \"areaValue.farm.id = farm.id\" )\n            .innerJoin(Area,\"area\", \"area.id = areaValue.area.id\" )\n            .groupBy(\"area.id\")\n\n})\n\nexport class DashboardTotalFarmsPlantingType { \n\n    @ViewColumn()\n    total: number;\n\n    @ViewColumn()\n    totalArea: number;\n\n    @ViewColumn()\n    area:  string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardTotalFarmsState.html":{"url":"classes/DashboardTotalFarmsState.html","title":"class - DashboardTotalFarmsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardTotalFarmsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/entities/dashboard.total-farms-state.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                farms\n                            \n                            \n                                state\n                            \n                            \n                                totalArea\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        farms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dashboard/entities/dashboard.total-farms-state.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dashboard/entities/dashboard.total-farms-state.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dashboard/entities/dashboard.total-farms-state.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Farm } from \"../../farms/entities/farm.entity\";\nimport { ViewEntity, ViewColumn, DataSource } from \"typeorm\"\n\n@ViewEntity({\n    expression: (dataSource: DataSource) =>\n        dataSource\n            .createQueryBuilder()\n            .select(\"COUNT(farm.state)\", \"farms\")\n            .addSelect(\"SUM(farm.totalArea)\", \"totalArea\")\n            .addSelect(\"farm.state\", \"state\")\n            .from(Farm, \"farm\")\n            .groupBy(\"farm.state\")\n\n})\n\nexport class DashboardTotalFarmsState { \n\n    @ViewColumn()\n    farms: number;\n\n    @ViewColumn()\n    totalArea: number;\n\n    @ViewColumn()\n    state:  string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Farm.html":{"url":"entities/Farm.html","title":"entity - Farm","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Farm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/farms/entities/farm.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                areas\n                            \n                            \n                                city\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                producers\n                            \n                            \n                                state\n                            \n                            \n                                    Optional\n                                totalArableArea\n                            \n                            \n                                totalArea\n                            \n                            \n                                totalVegetationArea\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        areas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AreaValue[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, area => area.farm, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/farms/entities/farm.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/farms/entities/farm.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('increment')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/farms/entities/farm.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/farms/entities/farm.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        producers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Producer[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, producers => producers.farms, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/farms/entities/farm.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/farms/entities/farm.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        totalArableArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/farms/entities/farm.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/farms/entities/farm.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalVegetationArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/farms/entities/farm.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Producer } from '../../producers/entities/producer.entity';\nimport { Column, Entity, ManyToMany, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\nimport { AreaValue } from './area.value.entity';\n\n@Entity()\nexport class Farm {\n\n    @PrimaryGeneratedColumn('increment')\n    id?: number;\n   \n    @Column()\n    name: string;\n    \n    @Column({default:0})\n    totalArea: number;\n\n    @Column({default:0})    \n    totalArableArea?: number;\n\n    @Column({default:0})\n    totalVegetationArea: number;\n\n    @Column()\n    city: string;\n    \n    @Column()\n    state: string;\n\n    @OneToMany(() => AreaValue, (area: AreaValue) => area.farm,\n    {\n        cascade: true\n    })\n    public areas?: AreaValue[];\n\n    @ManyToMany(() => Producer, (producers: Producer) => producers.farms,\n    {\n        onDelete: 'CASCADE'\n    })\n    public producers?: Producer[];\n\n   \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FarmsController.html":{"url":"controllers/FarmsController.html","title":"controller - FarmsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FarmsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/farms/farms.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFarmDto: CreateFarmDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/farms/farms.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createFarmDto\n                                    \n                                                CreateFarmDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/farms/farms.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/farms/farms.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/farms/farms.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateFarmDto: UpdateFarmDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/farms/farms.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateFarmDto\n                                    \n                                                UpdateFarmDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { FarmsService } from './farms.service';\nimport { CreateFarmDto } from './dto/create-farm.dto';\nimport { UpdateFarmDto } from './dto/update-farm.dto';\n\n@Controller({path: 'farms', version:'1'})\nexport class FarmsController {\n  constructor(private readonly farmsService: FarmsService) {}\n\n  @Post()\n  create(@Body() createFarmDto: CreateFarmDto) {\n    return this.farmsService.create(createFarmDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.farmsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.farmsService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateFarmDto: UpdateFarmDto) {\n    return this.farmsService.update(+id, updateFarmDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.farmsService.remove(+id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FarmsModule.html":{"url":"modules/FarmsModule.html","title":"module - FarmsModule","body":"\n                   \n\n\n\n\n    Modules\n    FarmsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FarmsModule\n\n\n\ncluster_FarmsModule_providers\n\n\n\n\nFarmsService\n\nFarmsService\n\n\n\nFarmsModule\n\nFarmsModule\n\nFarmsModule -->\n\nFarmsService->FarmsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/farms/farms.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FarmsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FarmsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FarmsService } from './farms.service';\nimport { FarmsController } from './farms.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Farm } from './entities/farm.entity';\nimport { AreaValue } from './entities/area.value.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Farm, AreaValue])],\n  controllers: [FarmsController],\n  providers: [FarmsService]\n})\nexport class FarmsModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FarmsService.html":{"url":"injectables/FarmsService.html","title":"injectable - FarmsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FarmsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/farms/farms.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(farmRepository: Repository, areaValueRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/farms/farms.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        farmRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        areaValueRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFarmDto: CreateFarmDto)\n                \n            \n\n\n            \n                \n                    Defined in src/farms/farms.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createFarmDto\n                                    \n                                                CreateFarmDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/farms/farms.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/farms/farms.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/farms/farms.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateFarmDto: UpdateFarmDto)\n                \n            \n\n\n            \n                \n                    Defined in src/farms/farms.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateFarmDto\n                                    \n                                                UpdateFarmDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, UpdateResult } from 'typeorm';\nimport { CreateFarmDto } from './dto/create-farm.dto';\nimport { UpdateFarmDto } from './dto/update-farm.dto';\nimport { AreaValue } from './entities/area.value.entity';\nimport { Farm } from './entities/farm.entity';\n\n@Injectable()\nexport class FarmsService {\n\n  constructor(\n    @InjectRepository(Farm)\n    private farmRepository: Repository,\n    @InjectRepository(AreaValue)\n    private areaValueRepository: Repository,\n  ) {}\n\n  create(createFarmDto: CreateFarmDto) {\n    return this.farmRepository.save(createFarmDto);\n  }\n\n  findAll() {\n    return this.farmRepository.find({\n        relations: ['areas','areas.area']\n      });\n  }\n\n  findOne(id: number) {\n    return this.farmRepository.findOne(\n      {\n        where: {id: id},\n        relations: ['areas', 'areas.area', 'producers']\n      }\n    ); \n  }\n\n  async update(id: number, updateFarmDto: UpdateFarmDto) {\n      let res: UpdateResult = new UpdateResult();\n      let farm = await this.findOne(id);\n\n      if (!farm){\n        res.affected = 0;\n        return res;\n      }\n      updateFarmDto.id = id;\n      await this.farmRepository.save(updateFarmDto);\n\n      res.affected = 1;\n      return res;\n  }\n\n  remove(id: number) {\n    return this.farmRepository.delete(id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Producer.html":{"url":"entities/Producer.html","title":"entity - Producer","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Producer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/producers/entities/producer.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                            \n                                    Public\n                                farms\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                personType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/producers/entities/producer.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        farms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Farm[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, farm => farm.producers, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/producers/entities/producer.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('increment')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/producers/entities/producer.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/producers/entities/producer.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        personType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PersonType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: PersonType, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/producers/entities/producer.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Farm } from '../../farms/entities/farm.entity';\nimport { Column, Entity, JoinTable, ManyToMany, PrimaryGeneratedColumn } from 'typeorm';\nimport PersonType from '../enums/person-type.enum';\n\n\n@Entity()\nexport class Producer {\n\n    @PrimaryGeneratedColumn('increment')\n    id?: number;\n\n    @Column({\n        type: \"enum\",\n        enum: PersonType,\n        default: PersonType.F,\n    })\n    personType?: PersonType\n\n    @Column()\n    name: string;\n\n    @Column()\n    document: string;\n\n    @ManyToMany(() => Farm, (farm: Farm) => farm.producers,  {\n        cascade: true\n    })\n    @JoinTable()\n    public farms: Farm[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProducersController.html":{"url":"controllers/ProducersController.html","title":"controller - ProducersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProducersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/producers/producers.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProducerDto: CreateProducerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/producers/producers.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProducerDto\n                                    \n                                                CreateProducerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/producers/producers.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/producers/producers.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/producers/producers.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateProducerDto: UpdateProducerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/producers/producers.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProducerDto\n                                    \n                                                UpdateProducerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ProducersService } from './producers.service';\nimport { CreateProducerDto } from './dto/create-producer.dto';\nimport { UpdateProducerDto } from './dto/update-producer.dto';\n\n@Controller({path: 'producers', version:'1'})\nexport class ProducersController {\n  constructor(private readonly producersService: ProducersService) {}\n\n  @Post()\n  create(@Body() createProducerDto: CreateProducerDto) {\n    return this.producersService.create(createProducerDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.producersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.producersService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateProducerDto: UpdateProducerDto) {\n    return this.producersService.update(+id, updateProducerDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.producersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProducersModule.html":{"url":"modules/ProducersModule.html","title":"module - ProducersModule","body":"\n                   \n\n\n\n\n    Modules\n    ProducersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProducersModule\n\n\n\ncluster_ProducersModule_providers\n\n\n\n\nProducersService\n\nProducersService\n\n\n\nProducersModule\n\nProducersModule\n\nProducersModule -->\n\nProducersService->ProducersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/producers/producers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProducersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProducersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProducersService } from './producers.service';\nimport { ProducersController } from './producers.controller';\nimport { Producer } from './entities/producer.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Producer])],\n  controllers: [ProducersController],\n  providers: [ProducersService]\n})\nexport class ProducersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProducersService.html":{"url":"injectables/ProducersService.html","title":"injectable - ProducersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProducersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/producers/producers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(producerRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/producers/producers.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        producerRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(updateProducerDto: CreateProducerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/producers/producers.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateProducerDto\n                                    \n                                                CreateProducerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/producers/producers.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/producers/producers.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/producers/producers.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateProducerDto: UpdateProducerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/producers/producers.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProducerDto\n                                    \n                                                UpdateProducerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, UpdateResult } from 'typeorm';\nimport { CreateProducerDto } from './dto/create-producer.dto';\nimport { UpdateProducerDto } from './dto/update-producer.dto';\nimport { Producer } from './entities/producer.entity';\n\n@Injectable()\nexport class ProducersService {\n\n  constructor(\n    @InjectRepository(Producer)\n    private producerRepository: Repository,\n  ) {}\n\n  create(updateProducerDto: CreateProducerDto) {\n    return this.producerRepository.save(updateProducerDto);\n  }\n\n  findAll() {\n    return this.producerRepository.find({\n      relations: ['farms', 'farms.areas','farms.areas.area']\n    });  \n  }\n\n  findOne(id: number) {\n    return this.producerRepository.findOne(\n      {\n        where: {id: id},\n        relations: ['farms', 'farms.areas','farms.areas.area']\n      }\n    ); \n  }\n\n  async update(id: number, updateProducerDto: UpdateProducerDto) {\n\n    let res: UpdateResult = new UpdateResult();\n    let producer = await this.findOne(id);\n\n    if (!producer){\n      res.affected = 0;\n      return res;\n    }\n    updateProducerDto.id = id;\n    await this.producerRepository.save(updateProducerDto);\n\n    res.affected = 1;\n    return res;\n  }\n\n  remove(id: number) {\n    return this.producerRepository.delete(id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseDashboardDto.html":{"url":"classes/ResponseDashboardDto.html","title":"class - ResponseDashboardDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseDashboardDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/dto/response-dashboard.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                farms\n                            \n                            \n                                farmsByAreaType\n                            \n                            \n                                farmsByPlantingType\n                            \n                            \n                                farmsByState\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        farms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DashboardTotalFarms\n\n                    \n                \n                    \n                        \n                                Defined in src/dashboard/dto/response-dashboard.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        farmsByAreaType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DashboardTotalFarmsAreaType\n\n                    \n                \n                    \n                        \n                                Defined in src/dashboard/dto/response-dashboard.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        farmsByPlantingType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DashboardTotalFarmsPlantingType[]\n\n                    \n                \n                    \n                        \n                                Defined in src/dashboard/dto/response-dashboard.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        farmsByState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DashboardTotalFarmsState[]\n\n                    \n                \n                    \n                        \n                                Defined in src/dashboard/dto/response-dashboard.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DashboardTotalFarmsAreaType } from \"../entities/dashboard.total-farms-area-type.entity\";\nimport { DashboardTotalFarmsPlantingType } from \"../entities/dashboard.total-farms-planting-type.entity\";\nimport { DashboardTotalFarmsState } from \"../entities/dashboard.total-farms-state.entity\";\nimport { DashboardTotalFarms } from \"../entities/dashboard.total-farms.entity\";\n\nexport class ResponseDashboardDto {\n\n    farms: DashboardTotalFarms;\n    farmsByState: DashboardTotalFarmsState[];\n    farmsByPlantingType: DashboardTotalFarmsPlantingType[];\n    farmsByAreaType: DashboardTotalFarmsAreaType;\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAreaDto.html":{"url":"classes/UpdateAreaDto.html","title":"class - UpdateAreaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAreaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/areas/dto/update-area.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAreaDto } from './create-area.dto';\n\nexport class UpdateAreaDto extends PartialType(CreateAreaDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDashboardDto.html":{"url":"classes/UpdateDashboardDto.html","title":"class - UpdateDashboardDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDashboardDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/dto/update-dashboard.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateDashboardDto } from './create-dashboard.dto';\n\nexport class UpdateDashboardDto extends PartialType(CreateDashboardDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFarmDto.html":{"url":"classes/UpdateFarmDto.html","title":"class - UpdateFarmDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFarmDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/farms/dto/update-farm.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/farms/dto/update-farm.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFarmDto } from './create-farm.dto';\n\nexport class UpdateFarmDto extends PartialType(CreateFarmDto) {\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProducerDto.html":{"url":"classes/UpdateProducerDto.html","title":"class - UpdateProducerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProducerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/producers/dto/update-producer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/producers/dto/update-producer.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProducerDto } from './create-producer.dto';\n\nexport class UpdateProducerDto extends PartialType(CreateProducerDto) {\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/areasValidator.html":{"url":"classes/areasValidator.html","title":"class - areasValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  areasValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/farms/validators/areas.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/farms/validators/areas.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(totalArea: number, args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/farms/validators/areas.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    totalArea\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ValidationArguments,\n    ValidatorConstraint,\n    ValidatorConstraintInterface,\n  } from 'class-validator';\nimport { CreateFarmDto } from '../dto/create-farm.dto';\n  \n  @ValidatorConstraint({ name: 'areasValidator', async: false })\n  export class areasValidator implements ValidatorConstraintInterface {\n\n\n    validate(totalArea: number, args: ValidationArguments) {\n\n      const data = args.object as CreateFarmDto;\n      //sum areas \n      const totalArableArea = data.areas\n        .map(c => c.value)\n        .reduce((sum, current) => sum + current);\n\n      if ( (totalArableArea + data.totalVegetationArea) \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/areasValidator-1.html":{"url":"classes/areasValidator-1.html","title":"class - areasValidator-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  areasValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/producers/validators/areas.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/producers/validators/areas.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(farms: Farm[], args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/producers/validators/areas.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    farms\n                                    \n                                                Farm[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ValidationArguments,\n    ValidatorConstraint,\n    ValidatorConstraintInterface,\n  } from 'class-validator';\nimport { Farm } from 'src/farms/entities/farm.entity';\n  \n  @ValidatorConstraint({ name: 'areasValidator', async: false })\n  export class areasValidator implements ValidatorConstraintInterface {\n\n    validate(farms: Farm[], args: ValidationArguments) {    \n      let error = true;\n      farms.forEach(element => {\n        let totalArableArea = element.areas\n        .map(c => c.value)\n        .reduce((sum, current) => sum + current);\n        if ( (totalArableArea + element.totalVegetationArea) > element.totalArea){\n          error = false;\n        } else {\n          element.totalArableArea = totalArableArea;\n        }\n      })\n\n      return error;\n    }\n  \n    defaultMessage() {\n      return 'The sum of arable area and vegetation must not be greater than the total area of ​​the farm.';\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/areas/areas.controller.ts\n            \n            controller\n            AreasController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/areas/areas.service.ts\n            \n            injectable\n            AreasService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/areas/dto/create-area.dto.ts\n            \n            class\n            CreateAreaDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/areas/dto/update-area.dto.ts\n            \n            class\n            UpdateAreaDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/areas/entities/area.entity.ts\n            \n            entity\n            Area\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dashboard/dashboard.controller.ts\n            \n            controller\n            DashboardController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dashboard/dashboard.service.ts\n            \n            injectable\n            DashboardService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dashboard/dto/create-dashboard.dto.ts\n            \n            class\n            CreateDashboardDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dashboard/dto/response-dashboard.dto.ts\n            \n            class\n            ResponseDashboardDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/dashboard/dto/update-dashboard.dto.ts\n            \n            class\n            UpdateDashboardDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dashboard/entities/dashboard.entity.ts\n            \n            class\n            Dashboard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dashboard/entities/dashboard.total-farms-area-type.entity.ts\n            \n            class\n            DashboardTotalFarmsAreaType\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dashboard/entities/dashboard.total-farms-planting-type.entity.ts\n            \n            class\n            DashboardTotalFarmsPlantingType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/dashboard/entities/dashboard.total-farms-state.entity.ts\n            \n            class\n            DashboardTotalFarmsState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/dashboard/entities/dashboard.total-farms.entity.ts\n            \n            class\n            DashboardTotalFarms\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/farms/dto/create-farm.dto.ts\n            \n            class\n            CreateFarmDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/farms/dto/update-farm.dto.ts\n            \n            class\n            UpdateFarmDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/farms/entities/area.value.entity.ts\n            \n            entity\n            AreaValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/farms/entities/farm.entity.ts\n            \n            entity\n            Farm\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/farms/farms.controller.ts\n            \n            controller\n            FarmsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/farms/farms.service.ts\n            \n            injectable\n            FarmsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/farms/validators/areas.ts\n            \n            class\n            areasValidator\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ormconfig.ts\n            \n            variable\n            setupDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/producers/dto/create-producer.dto.ts\n            \n            class\n            CreateProducerDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/producers/dto/update-producer.dto.ts\n            \n            class\n            UpdateProducerDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/producers/entities/producer.entity.ts\n            \n            entity\n            Producer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/producers/producers.controller.ts\n            \n            controller\n            ProducersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/producers/producers.service.ts\n            \n            injectable\n            ProducersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/producers/utils/document-transform.ts\n            \n            function\n            documentTransform\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/producers/validators/areas.ts\n            \n            class\n            areasValidator\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/producers/validators/document.ts\n            \n            class\n            documentValidator\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @youba/nestjs-dbvalidator : ^1.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cpf-cnpj-validator : ^1.0.3\n        \n            pg : ^8.10.0\n        \n            pg-mem : ^2.6.12\n        \n            postgres : ^3.3.4\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.12\n        \n            uuid : ^9.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/documentValidator.html":{"url":"classes/documentValidator.html","title":"class - documentValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  documentValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/producers/validators/document.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/producers/validators/document.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(document: string, args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/producers/validators/document.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ValidationArguments,\n    ValidatorConstraint,\n    ValidatorConstraintInterface,\n  } from 'class-validator';\nimport { cnpj, cpf } from 'cpf-cnpj-validator';\nimport { CreateProducerDto } from '../dto/create-producer.dto';\nimport PersonType from '../enums/person-type.enum';\n  \n  @ValidatorConstraint({ name: 'documentValidator', async: false })\n  export class documentValidator implements ValidatorConstraintInterface {\n\n    validate(document: string, args: ValidationArguments) {\n\n        const data = args.object as CreateProducerDto;\n        if (cpf.isValid(document)){            \n            data.personType = PersonType.F;\n            return true;\n        }\n\n        if (cnpj.isValid(document)){\n            data.personType = PersonType.J;\n            return true;\n        }\n            \n        return false;\n    }\n  \n    defaultMessage() {\n      return 'invalid document';\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PersonType   (src/.../person-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/producers/enums/person-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PersonType\n                    \n                \n                        \n                            \n                                 J\n                            \n                        \n                        \n                            \n                                Value : Juridica\n                            \n                        \n                        \n                            \n                                 F\n                            \n                        \n                        \n                            \n                                Value : Fisica\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            documentTransform   (src/.../document-transform.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/producers/utils/document-transform.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        documentTransform\n                        \n                    \n                \n            \n            \n                \ndocumentTransform(document: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBrain Agriculture Test\nDescription\nFarm and Producer Management System\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov🛠️ Develope with\n\nNest framework TypeScript starter repository.\n\nThanks to Brain Agriculture for the opportunity to demonstrate my work.\n\n\n⌨️ with ❤️ by Daniel Corbe Hahne Latorre 😊\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AreasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FarmsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProducersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AreasModule\n\n\n\ncluster_AreasModule_providers\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_providers\n\n\n\ncluster_FarmsModule\n\n\n\ncluster_FarmsModule_providers\n\n\n\ncluster_ProducersModule\n\n\n\ncluster_ProducersModule_providers\n\n\n\n\nAreasModule\n\nAreasModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAreasModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nFarmsModule\n\nFarmsModule\n\nAppModule -->\n\nFarmsModule->AppModule\n\n\n\n\n\nProducersModule\n\nProducersModule\n\nAppModule -->\n\nProducersModule->AppModule\n\n\n\n\n\nAreasService\n\nAreasService\n\nAreasModule -->\n\nAreasService->AreasModule\n\n\n\n\n\nDashboardService\n\nDashboardService\n\nDashboardModule -->\n\nDashboardService->DashboardModule\n\n\n\n\n\nFarmsService\n\nFarmsService\n\nFarmsModule -->\n\nFarmsService->FarmsModule\n\n\n\n\n\nProducersService\n\nProducersService\n\nProducersModule -->\n\nProducersService->ProducersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            setupDataSource   (src/.../ormconfig.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ormconfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n    const db = newDb({\n        autoCreateForeignKeyIndices: true,\n    });\n\n    db.public.registerFunction({\n        implementation: () => 'test',\n        name: 'current_database',\n    });\n\n    db.public.registerFunction({\n        implementation: () => 'test',\n        name: 'version',\n    });\n\n    // !! Add postgresl uuid-ossp extension, to use primary keys as uuid\n    // db.registerExtension('uuid-ossp', (schema) => {\n    //     schema.registerFunction({\n    //       name: 'uuid_generate_v4',\n    //       returns: DataType.uuid,\n    //       implementation: v4,\n    //       impure: true,\n    //     });\n    //   });\n\n    const ds: DataSource = await db.adapters.createTypeormDataSource({\n        type: 'postgres',\n        entities: ['../**/*.entity{.ts,.js}']\n    });\n    await ds.initialize();\n    await ds.synchronize();\n\n    return ds;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
